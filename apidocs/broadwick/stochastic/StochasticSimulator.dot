#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Trebuchet MS",fontsize=10,labelfontname="Trebuchet MS",labelfontsize=10];
	node [fontname="Trebuchet MS",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// broadwick.stochastic.algorithms.GillespieSimple
	c19836 [label=<<table title="broadwick.stochastic.algorithms.GillespieSimple" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./algorithms/GillespieSimple.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Trebuchet MS"> GillespieSimple </font></td></tr>
<tr><td align="center" balign="center"><font face="Trebuchet MS" point-size="7.0"> broadwick.stochastic.algorithms </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - changed : boolean </td></tr>
<tr><td align="left" balign="left"> - GENERATOR : broadwick.rng.RNG </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + GillespieSimple(amountManager : broadwick.stochastic.AmountManager, transitionKernel : broadwick.stochastic.TransitionKernel) </td></tr>
<tr><td align="left" balign="left"> + GillespieSimple(amountManager : broadwick.stochastic.AmountManager, transitionKernel : broadwick.stochastic.TransitionKernel, reverseTime : boolean) </td></tr>
<tr><td align="left" balign="left"> + reinitialize() </td></tr>
<tr><td align="left" balign="left"> + performStep() </td></tr>
<tr><td align="left" balign="left"> - calculateRTotal() : double </td></tr>
<tr><td align="left" balign="left"> - isThetaEventInCurrentStep(tau : double) : boolean </td></tr>
<tr><td align="left" balign="left"> + getName() : java.lang.String </td></tr>
<tr><td align="left" balign="left"> + setRngSeed(seed : int) </td></tr>
<tr><td align="left" balign="left"> - directMCReaction() : broadwick.stochastic.SimulationEvent </td></tr>
<tr><td align="left" balign="left"> # directMCTau(sum : double) : double </td></tr>
		</table></td></tr>
		</table>>, URL="./algorithms/GillespieSimple.html", fontname="Trebuchet MS", fontcolor="black", fontsize=9.0];
	// broadwick.stochastic.algorithms.AbstractTauLeapingBase
	c19837 [label=<<table title="broadwick.stochastic.algorithms.AbstractTauLeapingBase" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./algorithms/AbstractTauLeapingBase.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Trebuchet MS"> AbstractTauLeapingBase </font></td></tr>
<tr><td align="center" balign="center"><font face="Trebuchet MS" point-size="7.0"> broadwick.stochastic.algorithms </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # GENERATOR : broadwick.rng.RNG </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AbstractTauLeapingBase(amountManager : broadwick.stochastic.AmountManager, transitionKernel : broadwick.stochastic.TransitionKernel) </td></tr>
<tr><td align="left" balign="left"> # updateStates(tau : double) </td></tr>
<tr><td align="left" balign="left"> # isThetaEventInCurrentStep(tau : double) : boolean </td></tr>
		</table></td></tr>
		</table>>, URL="./algorithms/AbstractTauLeapingBase.html", fontname="Trebuchet MS", fontcolor="black", fontsize=9.0];
	// broadwick.stochastic.TransitionKernel
	c19838 [label=<<table title="broadwick.stochastic.TransitionKernel" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./TransitionKernel.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Trebuchet MS"> TransitionKernel </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - kernel : Map&lt;SimulationEvent, Double&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + TransitionKernel() </td></tr>
<tr><td align="left" balign="left"> + clone() : Object </td></tr>
<tr><td align="left" balign="left"> + addToKernel(event : SimulationEvent, rate : Double) </td></tr>
<tr><td align="left" balign="left"> + clear() </td></tr>
<tr><td align="left" balign="left"> + getTransitionEvents() : Set&lt;SimulationEvent&gt; </td></tr>
<tr><td align="left" balign="left"> + getTransitionProbability(event : SimulationEvent) : Double </td></tr>
<tr><td align="left" balign="left"> + setTransitionProbabilities(probabilities : Map&lt;SimulationEvent, Double&gt;) </td></tr>
<tr><td align="left" balign="left"> + getCDF() : Map&lt;SimulationEvent, Double&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./TransitionKernel.html", fontname="Trebuchet MS", fontcolor="black", fontsize=9.0];
	// broadwick.stochastic.StochasticSimulator
	c19839 [label=<<table title="broadwick.stochastic.StochasticSimulator" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./StochasticSimulator.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Trebuchet MS"> StochasticSimulator </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - startTime : int </td></tr>
<tr><td align="left" balign="left"> - transitionKernel : TransitionKernel </td></tr>
<tr><td align="left" balign="left"> - amountManager : AmountManager </td></tr>
<tr><td align="left" balign="left"> - currentTime : double </td></tr>
<tr><td align="left" balign="left"> - controller : SimulationController </td></tr>
<tr><td align="left" balign="left"> - thetaQueue : StochasticSimulator.ThetaQueue </td></tr>
<tr><td align="left" balign="left"> - observers : Set&lt;Observer&gt; </td></tr>
<tr><td align="left" balign="left"> # reverseTime : boolean </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + StochasticSimulator(amountManager : AmountManager, transitionKernel : TransitionKernel) </td></tr>
<tr><td align="left" balign="left"> + StochasticSimulator(amountManager : AmountManager, transitionKernel : TransitionKernel, reverseTime : boolean) </td></tr>
<tr><td align="left" balign="left"> + run(time : double) </td></tr>
<tr><td align="left" balign="left"> + run() </td></tr>
<tr><td align="left" balign="left"> + init() </td></tr>
<tr><td align="left" balign="left"> # doEvent(mu : SimulationEvent, t : double) </td></tr>
<tr><td align="left" balign="left"> # doEvent(event : SimulationEvent, t : double, n : int) </td></tr>
<tr><td align="left" balign="left"> # doThetaEvent() </td></tr>
<tr><td align="left" balign="left"> + addObserver(observer : Observer) </td></tr>
<tr><td align="left" balign="left"> + getNextThetaEventTime() : double </td></tr>
<tr><td align="left" balign="left"> + registerNewTheta(obs : Observer, thetaTime : double, event : Object) </td></tr>
<tr><td align="left" balign="left"> + getDefaultObserver() : Observer </td></tr>
<tr><td align="left" balign="left"><font face="Trebuchet MS" point-size="9.0"> + reinitialize() </font></td></tr>
<tr><td align="left" balign="left"><font face="Trebuchet MS" point-size="9.0"> + performStep() </font></td></tr>
<tr><td align="left" balign="left"><font face="Trebuchet MS" point-size="9.0"> + getName() : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Trebuchet MS" point-size="9.0"> + setRngSeed(seed : int) </font></td></tr>
		</table></td></tr>
		</table>>, URL="./StochasticSimulator.html", fontname="Trebuchet MS", fontcolor="black", fontsize=9.0];
	// broadwick.stochastic.StochasticSimulator.ThetaQueue
	c19840 [label=<<table title="broadwick.stochastic.StochasticSimulator.ThetaQueue" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./StochasticSimulator.ThetaQueue.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Trebuchet MS"> ThetaQueue </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - thetas : Table&lt;Double, Observer, Collection&lt;Object&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> - nextThetaEventTime : double </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + StochasticSimulator.ThetaQueue() </td></tr>
<tr><td align="left" balign="left"> + pushTheta(time : double, obs : Observer, theta : Object) </td></tr>
<tr><td align="left" balign="left"> + getNextEventDataAndRemove() : Map&lt;Observer, Collection&lt;Object&gt;&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./StochasticSimulator.ThetaQueue.html", fontname="Trebuchet MS", fontcolor="black", fontsize=9.0];
	// broadwick.stochastic.SimulationController
	c19844 [label=<<table title="broadwick.stochastic.SimulationController" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./SimulationController.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"><font face="Trebuchet MS"> SimulationController </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + goOn(process : StochasticSimulator) : boolean </td></tr>
		</table></td></tr>
		</table>>, URL="./SimulationController.html", fontname="Trebuchet MS", fontcolor="black", fontsize=9.0];
	// broadwick.stochastic.Observer
	c19845 [label=<<table title="broadwick.stochastic.Observer" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./Observer.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Trebuchet MS"> Observer </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - process : StochasticSimulator </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Observer(sim : StochasticSimulator) </td></tr>
<tr><td align="left" balign="left"> + compareTo(o : Observer) : int </td></tr>
<tr><td align="left" balign="left"><font face="Trebuchet MS" point-size="9.0"> + started() </font></td></tr>
<tr><td align="left" balign="left"><font face="Trebuchet MS" point-size="9.0"> + step() </font></td></tr>
<tr><td align="left" balign="left"><font face="Trebuchet MS" point-size="9.0"> + finished() </font></td></tr>
<tr><td align="left" balign="left"><font face="Trebuchet MS" point-size="9.0"> + theta(thetaTime : double, events : Collection&lt;Object&gt;) </font></td></tr>
<tr><td align="left" balign="left"><font face="Trebuchet MS" point-size="9.0"> + observeEvent(event : SimulationEvent, tau : double, times : int) </font></td></tr>
		</table></td></tr>
		</table>>, URL="./Observer.html", fontname="Trebuchet MS", fontcolor="black", fontsize=9.0];
	// broadwick.stochastic.AmountManager
	c19847 [label=<<table title="broadwick.stochastic.AmountManager" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AmountManager.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"><font face="Trebuchet MS"> AmountManager </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + performEvent(reaction : SimulationEvent, times : int) </td></tr>
<tr><td align="left" balign="left"> + toVerboseString() : String </td></tr>
<tr><td align="left" balign="left"> + resetAmount() </td></tr>
<tr><td align="left" balign="left"> + save() </td></tr>
<tr><td align="left" balign="left"> + rollback() </td></tr>
		</table></td></tr>
		</table>>, URL="./AmountManager.html", fontname="Trebuchet MS", fontcolor="black", fontsize=9.0];
	//broadwick.stochastic.algorithms.GillespieSimple extends broadwick.stochastic.StochasticSimulator
	c19839:p -> c19836:p [dir=back,arrowtail=empty];
	//broadwick.stochastic.algorithms.AbstractTauLeapingBase extends broadwick.stochastic.StochasticSimulator
	c19839:p -> c19837:p [dir=back,arrowtail=empty];
	// broadwick.stochastic.StochasticSimulator NAVASSOC broadwick.stochastic.TransitionKernel
	c19839:p -> c19838:p [taillabel="", label="", headlabel="", fontname="Trebuchet MS", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// broadwick.stochastic.StochasticSimulator NAVASSOC broadwick.stochastic.AmountManager
	c19839:p -> c19847:p [taillabel="", label="", headlabel="", fontname="Trebuchet MS", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// broadwick.stochastic.StochasticSimulator NAVASSOC broadwick.stochastic.SimulationController
	c19839:p -> c19844:p [taillabel="", label="", headlabel="", fontname="Trebuchet MS", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// broadwick.stochastic.StochasticSimulator NAVASSOC broadwick.stochastic.StochasticSimulator.ThetaQueue
	c19839:p -> c19840:p [taillabel="", label="", headlabel="", fontname="Trebuchet MS", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// broadwick.stochastic.StochasticSimulator NAVASSOC broadwick.stochastic.Observer
	c19839:p -> c19845:p [taillabel="", label="", headlabel="*", fontname="Trebuchet MS", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// broadwick.stochastic.Observer NAVASSOC broadwick.stochastic.StochasticSimulator
	c19845:p -> c19839:p [taillabel="", label="", headlabel="", fontname="Trebuchet MS", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
}

