#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Trebuchet MS",fontsize=10,labelfontname="Trebuchet MS",labelfontsize=10];
	node [fontname="Trebuchet MS",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// broadwick.io.FileOutput
	c10605 [label=<<table title="broadwick.io.FileOutput" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./FileOutput.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Trebuchet MS"> FileOutput </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - buffer : BufferedOutputStream </td></tr>
<tr><td align="left" balign="left"> - fileEncoding : String </td></tr>
<tr><td align="left" balign="left"> - DEFAULT_ENCODING : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + FileOutput() </td></tr>
<tr><td align="left" balign="left"> + FileOutput(dataFileName : String) </td></tr>
<tr><td align="left" balign="left"> + FileOutput(dataFileName : String, addVersion : boolean) </td></tr>
<tr><td align="left" balign="left"> + FileOutput(dataFileName : String, addVersion : boolean, encoding : String) </td></tr>
<tr><td align="left" balign="left"> + write(str : String) </td></tr>
<tr><td align="left" balign="left"> + write(format : String, args : Object[]) : String </td></tr>
<tr><td align="left" balign="left"> + close() </td></tr>
<tr><td align="left" balign="left"> + flush() </td></tr>
<tr><td align="left" balign="left"> + saveToFile(dataFileName : String, data : String, addVersion : boolean) </td></tr>
<tr><td align="left" balign="left"> + saveToFile(dataFileName : String, format : String, addVersion : boolean, args : Object[]) </td></tr>
		</table></td></tr>
		</table>>, URL="./FileOutput.html", fontname="Trebuchet MS", fontcolor="black", fontsize=9.0];
	// broadwick.montecarlo.markovchain.MarkovChainMonteCarlo
	c10618 [label=<<table title="broadwick.montecarlo.markovchain.MarkovChainMonteCarlo" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../montecarlo/markovchain/MarkovChainMonteCarlo.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Trebuchet MS"> MarkovChainMonteCarlo </font></td></tr>
<tr><td align="center" balign="center"><font face="Trebuchet MS" point-size="7.0"> broadwick.montecarlo.markovchain </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - numStepsTaken : int </td></tr>
<tr><td align="left" balign="left"> - numAcceptedSteps : int </td></tr>
<tr><td align="left" balign="left"> - burnIn : int </td></tr>
<tr><td align="left" balign="left"> - thinningInterval : int </td></tr>
<tr><td align="left" balign="left"> - acceptor : broadwick.montecarlo.acceptor.MonteCarloAcceptor </td></tr>
<tr><td align="left" balign="left"> - mcController : broadwick.montecarlo.markovchain.controller.MarkovChainController </td></tr>
<tr><td align="left" balign="left"> - observers : java.util.Set&lt;broadwick.montecarlo.markovchain.observer.MarkovChainObserver&gt; </td></tr>
<tr><td align="left" balign="left"> - writer : broadwick.io.FileOutput </td></tr>
<tr><td align="left" balign="left"> - model : broadwick.montecarlo.MonteCarloScenario </td></tr>
<tr><td align="left" balign="left"> - pathGenerator : broadwick.montecarlo.markovchain.MarkovStepGenerator </td></tr>
<tr><td align="left" balign="left"> - consumer : broadwick.montecarlo.MonteCarloResults </td></tr>
<tr><td align="left" balign="left"> - numMonteCarloSteps : int </td></tr>
<tr><td align="left" balign="left"> - GENERATOR : broadwick.rng.RNG </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + MarkovChainMonteCarlo(model : broadwick.montecarlo.MonteCarloScenario, consumer : broadwick.montecarlo.MonteCarloResults, generator : broadwick.montecarlo.markovchain.MarkovStepGenerator, numMonteCarloSteps : int) </td></tr>
<tr><td align="left" balign="left"> + MarkovChainMonteCarlo(model : broadwick.montecarlo.MonteCarloScenario, consumer : broadwick.montecarlo.MonteCarloResults, controller : broadwick.montecarlo.markovchain.controller.MarkovChainController, generator : broadwick.montecarlo.markovchain.MarkovStepGenerator, numMonteCarloSteps : int) </td></tr>
<tr><td align="left" balign="left"> + run() </td></tr>
<tr><td align="left" balign="left"> + addObserver(observer : broadwick.montecarlo.markovchain.observer.MarkovChainObserver) </td></tr>
		</table></td></tr>
		</table>>, URL="../montecarlo/markovchain/MarkovChainMonteCarlo.html", fontname="Trebuchet MS", fontcolor="black", fontsize=9.0];
	// broadwick.montecarlo.markovchain.MarkovChainMonteCarlo NAVASSOC broadwick.io.FileOutput
	c10618:p -> c10605:p [taillabel="", label="", headlabel="", fontname="Trebuchet MS", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
}

