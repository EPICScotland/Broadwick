#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Trebuchet MS",fontsize=10,labelfontname="Trebuchet MS",labelfontsize=10];
	node [fontname="Trebuchet MS",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// broadwick.graph.Graph<V extends broadwick.graph.Vertex, E extends broadwick.graph.Edge<V>>
	c11521 [label=<<table title="broadwick.graph.Graph" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../Graph.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"><font face="Trebuchet MS"> Graph&lt;V extends broadwick.graph.Vertex, E extends broadwick.graph.Edge&lt;V&gt;&gt; </font></td></tr>
<tr><td align="center" balign="center"><font face="Trebuchet MS" point-size="7.0"> broadwick.graph </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getInEdges(vertex : V) : java.util.Collection&lt;E&gt; </td></tr>
<tr><td align="left" balign="left"> + getOutEdges(vertex : V) : java.util.Collection&lt;E&gt; </td></tr>
<tr><td align="left" balign="left"> + getPredecessors(vertex : V) : java.util.Collection&lt;V&gt; </td></tr>
<tr><td align="left" balign="left"> + getSuccessors(vertex : V) : java.util.Collection&lt;V&gt; </td></tr>
<tr><td align="left" balign="left"> + inDegree(vertex : V) : int </td></tr>
<tr><td align="left" balign="left"> + outDegree(vertex : V) : int </td></tr>
<tr><td align="left" balign="left"> + isPredecessor(v1 : V, v2 : V) : boolean </td></tr>
<tr><td align="left" balign="left"> + isSuccessor(v1 : V, v2 : V) : boolean </td></tr>
<tr><td align="left" balign="left"> + getPredecessorCount(vertex : V) : int </td></tr>
<tr><td align="left" balign="left"> + getSuccessorCount(vertex : V) : int </td></tr>
<tr><td align="left" balign="left"> + getSource(directedEdge : E) : V </td></tr>
<tr><td align="left" balign="left"> + getDest(directedEdge : E) : V </td></tr>
<tr><td align="left" balign="left"> + isSource(vertex : V, edge : E) : boolean </td></tr>
<tr><td align="left" balign="left"> + isDest(vertex : V, edge : E) : boolean </td></tr>
<tr><td align="left" balign="left"> + addVertex(vertex : V) : boolean </td></tr>
<tr><td align="left" balign="left"> + addEdge(e : E, v1 : V, v2 : V) : boolean </td></tr>
<tr><td align="left" balign="left"> + addEdge(e : E, v1 : V, v2 : V, edgeType : broadwick.graph.EdgeType) : boolean </td></tr>
<tr><td align="left" balign="left"> + getEndpoints(edge : E) : broadwick.utils.Pair&lt;V, V&gt; </td></tr>
<tr><td align="left" balign="left"> + getOpposite(vertex : V, edge : E) : V </td></tr>
<tr><td align="left" balign="left"> + getVertexCount() : int </td></tr>
<tr><td align="left" balign="left"> + getVertices() : java.util.Collection&lt;V&gt; </td></tr>
<tr><td align="left" balign="left"> + getEdges() : java.util.Collection&lt;E&gt; </td></tr>
<tr><td align="left" balign="left"> + removeVertex(vertex : V) : boolean </td></tr>
<tr><td align="left" balign="left"> + removeEdge(edge : E) : boolean </td></tr>
<tr><td align="left" balign="left"> + getVertexAttributes() : java.util.Collection&lt;broadwick.graph.VertexAttribute&gt; </td></tr>
<tr><td align="left" balign="left"> + getEdgeAttributes() : java.util.Collection&lt;broadwick.graph.EdgeAttribute&gt; </td></tr>
<tr><td align="left" balign="left"> + addVertexAttribute(name : java.lang.String, type : java.lang.Class&lt;&gt;, defaultValue : java.lang.String) </td></tr>
<tr><td align="left" balign="left"> + addEdgeAttribute(name : java.lang.String, type : java.lang.Class&lt;&gt;, defaultValue : java.lang.String) </td></tr>
<tr><td align="left" balign="left"> + getEdgeType() : broadwick.graph.EdgeType </td></tr>
		</table></td></tr>
		</table>>, URL="../Graph.html", fontname="Trebuchet MS", fontcolor="black", fontsize=9.0];
	// broadwick.graph.writer.GraphViz
	c11528 [label=<<table title="broadwick.graph.writer.GraphViz" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./GraphViz.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Trebuchet MS"> GraphViz </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - GraphViz() </td></tr>
<tr><td align="left" balign="left"> + toString(network : Graph&lt;?, ?&gt;) : String </td></tr>
<tr><td align="left" balign="left"> + save(file : String, network : Graph&lt;?, ?&gt;) </td></tr>
		</table></td></tr>
		</table>>, URL="./GraphViz.html", fontname="Trebuchet MS", fontcolor="black", fontsize=9.0];
	// broadwick.graph.writer.GraphViz DEPEND broadwick.graph.Graph<V extends broadwick.graph.Vertex, E extends broadwick.graph.Edge<V>>
	c11528:p -> c11521:p [taillabel="", label="", headlabel="", fontname="Trebuchet MS", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// broadwick.graph.writer.GraphViz DEPEND broadwick.graph.Graph<V extends broadwick.graph.Vertex, E extends broadwick.graph.Edge<V>>
	c11528:p -> c11521:p [taillabel="", label="", headlabel="", fontname="Trebuchet MS", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
}

