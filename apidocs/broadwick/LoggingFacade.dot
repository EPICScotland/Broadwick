#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Trebuchet MS",fontsize=10,labelfontname="Trebuchet MS",labelfontsize=10];
	node [fontname="Trebuchet MS",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// broadwick.LoggingFacade
	c12546 [label=<<table title="broadwick.LoggingFacade" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./LoggingFacade.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Trebuchet MS"> LoggingFacade </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - rootLogger : Logger </td></tr>
<tr><td align="left" balign="left"> - loggerContext : LoggerContext </td></tr>
<tr><td align="left" balign="left"> - logFormatThreadMsg : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + LoggingFacade() </td></tr>
<tr><td align="left" balign="left"> + addConsoleLogger(level : String, pattern : String) </td></tr>
<tr><td align="left" balign="left"> + addFileLogger(file : String, level : String, pattern : String, overwrite : Boolean) </td></tr>
<tr><td align="left" balign="left"> - createPatternLayoutEncoder(pattern : String) : Encoder&lt;ILoggingEvent&gt; </td></tr>
<tr><td align="left" balign="left"> - createThresholdFilter(level : String) : Filter&lt;ILoggingEvent&gt; </td></tr>
<tr><td align="left" balign="left"> - setLoggingLevel(level : String) </td></tr>
		</table></td></tr>
		</table>>, URL="./LoggingFacade.html", fontname="Trebuchet MS", fontcolor="black", fontsize=9.0];
	// broadwick.LoggingFacade NAVASSOC ch.qos.logback.classic.Logger
	c12546:p -> c12677:p [taillabel="", label="", headlabel="", fontname="Trebuchet MS", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// broadwick.LoggingFacade NAVASSOC ch.qos.logback.classic.LoggerContext
	c12546:p -> c12685:p [taillabel="", label="", headlabel="", fontname="Trebuchet MS", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// broadwick.LoggingFacade DEPEND ch.qos.logback.core.encoder.Encoder<E>
	c12546:p -> c12688:p [taillabel="", label="", headlabel="", fontname="Trebuchet MS", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// broadwick.LoggingFacade DEPEND ch.qos.logback.core.filter.Filter<E>
	c12546:p -> c12690:p [taillabel="", label="", headlabel="", fontname="Trebuchet MS", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// ch.qos.logback.classic.LoggerContext
	c12685 [label=<<table title="ch.qos.logback.classic.LoggerContext" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/ch/qos/logback/classic/LoggerContext.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Trebuchet MS"> LoggerContext </font></td></tr>
<tr><td align="center" balign="center"><font face="Trebuchet MS" point-size="7.0"> ch.qos.logback.classic </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ root : ch.qos.logback.classic.Logger </td></tr>
<tr><td align="left" balign="left"> - size : int </td></tr>
<tr><td align="left" balign="left"> - noAppenderWarning : int </td></tr>
<tr><td align="left" balign="left"> - loggerContextListenerList : java.util.List&lt;ch.qos.logback.classic.spi.LoggerContextListener&gt; </td></tr>
<tr><td align="left" balign="left"> - loggerCache : java.util.Map&lt;java.lang.String, ch.qos.logback.classic.Logger&gt; </td></tr>
<tr><td align="left" balign="left"> - loggerContextRemoteView : ch.qos.logback.classic.spi.LoggerContextVO </td></tr>
<tr><td align="left" balign="left"> - turboFilterList : ch.qos.logback.classic.spi.TurboFilterList </td></tr>
<tr><td align="left" balign="left"> - packagingDataEnabled : boolean </td></tr>
<tr><td align="left" balign="left"> - maxCallerDataDepth : int </td></tr>
<tr><td align="left" balign="left"> ~ resetCount : int </td></tr>
<tr><td align="left" balign="left"> - frameworkPackages : java.util.List&lt;java.lang.String&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + LoggerContext() </td></tr>
<tr><td align="left" balign="left"> ~ initEvaluatorMap() </td></tr>
<tr><td align="left" balign="left"> - updateLoggerContextVO() </td></tr>
<tr><td align="left" balign="left"> + putProperty(arg0 : java.lang.String, arg1 : java.lang.String) </td></tr>
<tr><td align="left" balign="left"> + setName(arg0 : java.lang.String) </td></tr>
<tr><td align="left" balign="left"> + getLogger(arg0 : java.lang.Class&lt;&gt;) : ch.qos.logback.classic.Logger </td></tr>
<tr><td align="left" balign="left"> + getLogger(arg0 : java.lang.String) : ch.qos.logback.classic.Logger </td></tr>
<tr><td align="left" balign="left"> - incSize() </td></tr>
<tr><td align="left" balign="left"> ~ size() : int </td></tr>
<tr><td align="left" balign="left"> + exists(arg0 : java.lang.String) : ch.qos.logback.classic.Logger </td></tr>
<tr><td align="left" balign="left"> ~ noAppenderDefinedWarning(arg0 : ch.qos.logback.classic.Logger) </td></tr>
<tr><td align="left" balign="left"> + getLoggerList() : java.util.List&lt;ch.qos.logback.classic.Logger&gt; </td></tr>
<tr><td align="left" balign="left"> + getLoggerContextRemoteView() : ch.qos.logback.classic.spi.LoggerContextVO </td></tr>
<tr><td align="left" balign="left"> + setPackagingDataEnabled(arg0 : boolean) </td></tr>
<tr><td align="left" balign="left"> + isPackagingDataEnabled() : boolean </td></tr>
<tr><td align="left" balign="left"> + reset() </td></tr>
<tr><td align="left" balign="left"> - resetStatusListeners() </td></tr>
<tr><td align="left" balign="left"> + getTurboFilterList() : ch.qos.logback.classic.spi.TurboFilterList </td></tr>
<tr><td align="left" balign="left"> + addTurboFilter(arg0 : ch.qos.logback.classic.turbo.TurboFilter) </td></tr>
<tr><td align="left" balign="left"> + resetTurboFilterList() </td></tr>
<tr><td align="left" balign="left"> ~ getTurboFilterChainDecision_0_3OrMore(arg0 : org.slf4j.Marker, arg1 : ch.qos.logback.classic.Logger, arg2 : ch.qos.logback.classic.Level, arg3 : java.lang.String, arg4 : java.lang.Object[], arg5 : java.lang.Throwable) : ch.qos.logback.core.spi.FilterReply </td></tr>
<tr><td align="left" balign="left"> ~ getTurboFilterChainDecision_1(arg0 : org.slf4j.Marker, arg1 : ch.qos.logback.classic.Logger, arg2 : ch.qos.logback.classic.Level, arg3 : java.lang.String, arg4 : java.lang.Object, arg5 : java.lang.Throwable) : ch.qos.logback.core.spi.FilterReply </td></tr>
<tr><td align="left" balign="left"> ~ getTurboFilterChainDecision_2(arg0 : org.slf4j.Marker, arg1 : ch.qos.logback.classic.Logger, arg2 : ch.qos.logback.classic.Level, arg3 : java.lang.String, arg4 : java.lang.Object, arg5 : java.lang.Object, arg6 : java.lang.Throwable) : ch.qos.logback.core.spi.FilterReply </td></tr>
<tr><td align="left" balign="left"> + addListener(arg0 : ch.qos.logback.classic.spi.LoggerContextListener) </td></tr>
<tr><td align="left" balign="left"> + removeListener(arg0 : ch.qos.logback.classic.spi.LoggerContextListener) </td></tr>
<tr><td align="left" balign="left"> - resetListenersExceptResetResistant() </td></tr>
<tr><td align="left" balign="left"> - resetAllListeners() </td></tr>
<tr><td align="left" balign="left"> + getCopyOfListenerList() : java.util.List&lt;ch.qos.logback.classic.spi.LoggerContextListener&gt; </td></tr>
<tr><td align="left" balign="left"> ~ fireOnLevelChange(arg0 : ch.qos.logback.classic.Logger, arg1 : ch.qos.logback.classic.Level) </td></tr>
<tr><td align="left" balign="left"> - fireOnReset() </td></tr>
<tr><td align="left" balign="left"> - fireOnStart() </td></tr>
<tr><td align="left" balign="left"> - fireOnStop() </td></tr>
<tr><td align="left" balign="left"> + start() </td></tr>
<tr><td align="left" balign="left"> + stop() </td></tr>
<tr><td align="left" balign="left"> + toString() : java.lang.String </td></tr>
<tr><td align="left" balign="left"> + getMaxCallerDataDepth() : int </td></tr>
<tr><td align="left" balign="left"> + setMaxCallerDataDepth(arg0 : int) </td></tr>
<tr><td align="left" balign="left"> + getFrameworkPackages() : java.util.List&lt;java.lang.String&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="http://java.sun.com/j2se/1.4.2/docs/api/ch/qos/logback/classic/LoggerContext.html", fontname="Trebuchet MS", fontcolor="black", fontsize=9.0];
	// ch.qos.logback.classic.Logger
	c12677 [label=<<table title="ch.qos.logback.classic.Logger" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/ch/qos/logback/classic/Logger.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Trebuchet MS"> Logger </font></td></tr>
<tr><td align="center" balign="center"><font face="Trebuchet MS" point-size="7.0"> ch.qos.logback.classic </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - serialVersionUID : long </td></tr>
<tr><td align="left" balign="left"> + FQCN : java.lang.String </td></tr>
<tr><td align="left" balign="left"> - name : java.lang.String </td></tr>
<tr><td align="left" balign="left"> - level : ch.qos.logback.classic.Level </td></tr>
<tr><td align="left" balign="left"> - effectiveLevelInt : int </td></tr>
<tr><td align="left" balign="left"> - parent : ch.qos.logback.classic.Logger </td></tr>
<tr><td align="left" balign="left"> - childrenList : java.util.List&lt;ch.qos.logback.classic.Logger&gt; </td></tr>
<tr><td align="left" balign="left"> - aai : ch.qos.logback.core.spi.AppenderAttachableImpl&lt;ch.qos.logback.classic.spi.ILoggingEvent&gt; </td></tr>
<tr><td align="left" balign="left"> - additive : boolean </td></tr>
<tr><td align="left" balign="left"> ~ loggerContext : ch.qos.logback.classic.LoggerContext </td></tr>
<tr><td align="left" balign="left"> - DEFAULT_CHILD_ARRAY_SIZE : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ Logger(arg0 : java.lang.String, arg1 : ch.qos.logback.classic.Logger, arg2 : ch.qos.logback.classic.LoggerContext) </td></tr>
<tr><td align="left" balign="left"> + getEffectiveLevel() : ch.qos.logback.classic.Level </td></tr>
<tr><td align="left" balign="left"> ~ getEffectiveLevelInt() : int </td></tr>
<tr><td align="left" balign="left"> + getLevel() : ch.qos.logback.classic.Level </td></tr>
<tr><td align="left" balign="left"> + getName() : java.lang.String </td></tr>
<tr><td align="left" balign="left"> - isRootLogger() : boolean </td></tr>
<tr><td align="left" balign="left"> ~ getChildByName(arg0 : java.lang.String) : ch.qos.logback.classic.Logger </td></tr>
<tr><td align="left" balign="left"> + setLevel(arg0 : ch.qos.logback.classic.Level) </td></tr>
<tr><td align="left" balign="left"> - handleParentLevelChange(arg0 : int) </td></tr>
<tr><td align="left" balign="left"> + detachAndStopAllAppenders() </td></tr>
<tr><td align="left" balign="left"> + detachAppender(arg0 : java.lang.String) : boolean </td></tr>
<tr><td align="left" balign="left"> + addAppender(arg0 : ch.qos.logback.core.Appender&lt;ch.qos.logback.classic.spi.ILoggingEvent&gt;) </td></tr>
<tr><td align="left" balign="left"> + isAttached(arg0 : ch.qos.logback.core.Appender&lt;ch.qos.logback.classic.spi.ILoggingEvent&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> + iteratorForAppenders() : java.util.Iterator&lt;ch.qos.logback.core.Appender&lt;ch.qos.logback.classic.spi.ILoggingEvent&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getAppender(arg0 : java.lang.String) : ch.qos.logback.core.Appender&lt;ch.qos.logback.classic.spi.ILoggingEvent&gt; </td></tr>
<tr><td align="left" balign="left"> + callAppenders(arg0 : ch.qos.logback.classic.spi.ILoggingEvent) </td></tr>
<tr><td align="left" balign="left"> - appendLoopOnAppenders(arg0 : ch.qos.logback.classic.spi.ILoggingEvent) : int </td></tr>
<tr><td align="left" balign="left"> + detachAppender(arg0 : ch.qos.logback.core.Appender&lt;ch.qos.logback.classic.spi.ILoggingEvent&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> ~ createChildByLastNamePart(arg0 : java.lang.String) : ch.qos.logback.classic.Logger </td></tr>
<tr><td align="left" balign="left"> - localLevelReset() </td></tr>
<tr><td align="left" balign="left"> ~ recursiveReset() </td></tr>
<tr><td align="left" balign="left"> ~ createChildByName(arg0 : java.lang.String) : ch.qos.logback.classic.Logger </td></tr>
<tr><td align="left" balign="left"> - filterAndLog_0_Or3Plus(arg0 : java.lang.String, arg1 : org.slf4j.Marker, arg2 : ch.qos.logback.classic.Level, arg3 : java.lang.String, arg4 : java.lang.Object[], arg5 : java.lang.Throwable) </td></tr>
<tr><td align="left" balign="left"> - filterAndLog_1(arg0 : java.lang.String, arg1 : org.slf4j.Marker, arg2 : ch.qos.logback.classic.Level, arg3 : java.lang.String, arg4 : java.lang.Object, arg5 : java.lang.Throwable) </td></tr>
<tr><td align="left" balign="left"> - filterAndLog_2(arg0 : java.lang.String, arg1 : org.slf4j.Marker, arg2 : ch.qos.logback.classic.Level, arg3 : java.lang.String, arg4 : java.lang.Object, arg5 : java.lang.Object, arg6 : java.lang.Throwable) </td></tr>
<tr><td align="left" balign="left"> - buildLoggingEventAndAppend(arg0 : java.lang.String, arg1 : org.slf4j.Marker, arg2 : ch.qos.logback.classic.Level, arg3 : java.lang.String, arg4 : java.lang.Object[], arg5 : java.lang.Throwable) </td></tr>
<tr><td align="left" balign="left"> + trace(arg0 : java.lang.String) </td></tr>
<tr><td align="left" balign="left"> + trace(arg0 : java.lang.String, arg1 : java.lang.Object) </td></tr>
<tr><td align="left" balign="left"> + trace(arg0 : java.lang.String, arg1 : java.lang.Object, arg2 : java.lang.Object) </td></tr>
<tr><td align="left" balign="left"> + trace(arg0 : java.lang.String, arg1 : java.lang.Object[]) </td></tr>
<tr><td align="left" balign="left"> + trace(arg0 : java.lang.String, arg1 : java.lang.Throwable) </td></tr>
<tr><td align="left" balign="left"> + trace(arg0 : org.slf4j.Marker, arg1 : java.lang.String) </td></tr>
<tr><td align="left" balign="left"> + trace(arg0 : org.slf4j.Marker, arg1 : java.lang.String, arg2 : java.lang.Object) </td></tr>
<tr><td align="left" balign="left"> + trace(arg0 : org.slf4j.Marker, arg1 : java.lang.String, arg2 : java.lang.Object, arg3 : java.lang.Object) </td></tr>
<tr><td align="left" balign="left"> + trace(arg0 : org.slf4j.Marker, arg1 : java.lang.String, arg2 : java.lang.Object[]) </td></tr>
<tr><td align="left" balign="left"> + trace(arg0 : org.slf4j.Marker, arg1 : java.lang.String, arg2 : java.lang.Throwable) </td></tr>
<tr><td align="left" balign="left"> + isDebugEnabled() : boolean </td></tr>
<tr><td align="left" balign="left"> + isDebugEnabled(arg0 : org.slf4j.Marker) : boolean </td></tr>
<tr><td align="left" balign="left"> + debug(arg0 : java.lang.String) </td></tr>
<tr><td align="left" balign="left"> + debug(arg0 : java.lang.String, arg1 : java.lang.Object) </td></tr>
<tr><td align="left" balign="left"> + debug(arg0 : java.lang.String, arg1 : java.lang.Object, arg2 : java.lang.Object) </td></tr>
<tr><td align="left" balign="left"> + debug(arg0 : java.lang.String, arg1 : java.lang.Object[]) </td></tr>
<tr><td align="left" balign="left"> + debug(arg0 : java.lang.String, arg1 : java.lang.Throwable) </td></tr>
<tr><td align="left" balign="left"> + debug(arg0 : org.slf4j.Marker, arg1 : java.lang.String) </td></tr>
<tr><td align="left" balign="left"> + debug(arg0 : org.slf4j.Marker, arg1 : java.lang.String, arg2 : java.lang.Object) </td></tr>
<tr><td align="left" balign="left"> + debug(arg0 : org.slf4j.Marker, arg1 : java.lang.String, arg2 : java.lang.Object, arg3 : java.lang.Object) </td></tr>
<tr><td align="left" balign="left"> + debug(arg0 : org.slf4j.Marker, arg1 : java.lang.String, arg2 : java.lang.Object[]) </td></tr>
<tr><td align="left" balign="left"> + debug(arg0 : org.slf4j.Marker, arg1 : java.lang.String, arg2 : java.lang.Throwable) </td></tr>
<tr><td align="left" balign="left"> + error(arg0 : java.lang.String) </td></tr>
<tr><td align="left" balign="left"> + error(arg0 : java.lang.String, arg1 : java.lang.Object) </td></tr>
<tr><td align="left" balign="left"> + error(arg0 : java.lang.String, arg1 : java.lang.Object, arg2 : java.lang.Object) </td></tr>
<tr><td align="left" balign="left"> + error(arg0 : java.lang.String, arg1 : java.lang.Object[]) </td></tr>
<tr><td align="left" balign="left"> + error(arg0 : java.lang.String, arg1 : java.lang.Throwable) </td></tr>
<tr><td align="left" balign="left"> + error(arg0 : org.slf4j.Marker, arg1 : java.lang.String) </td></tr>
<tr><td align="left" balign="left"> + error(arg0 : org.slf4j.Marker, arg1 : java.lang.String, arg2 : java.lang.Object) </td></tr>
<tr><td align="left" balign="left"> + error(arg0 : org.slf4j.Marker, arg1 : java.lang.String, arg2 : java.lang.Object, arg3 : java.lang.Object) </td></tr>
<tr><td align="left" balign="left"> + error(arg0 : org.slf4j.Marker, arg1 : java.lang.String, arg2 : java.lang.Object[]) </td></tr>
<tr><td align="left" balign="left"> + error(arg0 : org.slf4j.Marker, arg1 : java.lang.String, arg2 : java.lang.Throwable) </td></tr>
<tr><td align="left" balign="left"> + isInfoEnabled() : boolean </td></tr>
<tr><td align="left" balign="left"> + isInfoEnabled(arg0 : org.slf4j.Marker) : boolean </td></tr>
<tr><td align="left" balign="left"> + info(arg0 : java.lang.String) </td></tr>
<tr><td align="left" balign="left"> + info(arg0 : java.lang.String, arg1 : java.lang.Object) </td></tr>
<tr><td align="left" balign="left"> + info(arg0 : java.lang.String, arg1 : java.lang.Object, arg2 : java.lang.Object) </td></tr>
<tr><td align="left" balign="left"> + info(arg0 : java.lang.String, arg1 : java.lang.Object[]) </td></tr>
<tr><td align="left" balign="left"> + info(arg0 : java.lang.String, arg1 : java.lang.Throwable) </td></tr>
<tr><td align="left" balign="left"> + info(arg0 : org.slf4j.Marker, arg1 : java.lang.String) </td></tr>
<tr><td align="left" balign="left"> + info(arg0 : org.slf4j.Marker, arg1 : java.lang.String, arg2 : java.lang.Object) </td></tr>
<tr><td align="left" balign="left"> + info(arg0 : org.slf4j.Marker, arg1 : java.lang.String, arg2 : java.lang.Object, arg3 : java.lang.Object) </td></tr>
<tr><td align="left" balign="left"> + info(arg0 : org.slf4j.Marker, arg1 : java.lang.String, arg2 : java.lang.Object[]) </td></tr>
<tr><td align="left" balign="left"> + info(arg0 : org.slf4j.Marker, arg1 : java.lang.String, arg2 : java.lang.Throwable) </td></tr>
<tr><td align="left" balign="left"> + isTraceEnabled() : boolean </td></tr>
<tr><td align="left" balign="left"> + isTraceEnabled(arg0 : org.slf4j.Marker) : boolean </td></tr>
<tr><td align="left" balign="left"> + isErrorEnabled() : boolean </td></tr>
<tr><td align="left" balign="left"> + isErrorEnabled(arg0 : org.slf4j.Marker) : boolean </td></tr>
<tr><td align="left" balign="left"> + isWarnEnabled() : boolean </td></tr>
<tr><td align="left" balign="left"> + isWarnEnabled(arg0 : org.slf4j.Marker) : boolean </td></tr>
<tr><td align="left" balign="left"> + isEnabledFor(arg0 : org.slf4j.Marker, arg1 : ch.qos.logback.classic.Level) : boolean </td></tr>
<tr><td align="left" balign="left"> + isEnabledFor(arg0 : ch.qos.logback.classic.Level) : boolean </td></tr>
<tr><td align="left" balign="left"> + warn(arg0 : java.lang.String) </td></tr>
<tr><td align="left" balign="left"> + warn(arg0 : java.lang.String, arg1 : java.lang.Throwable) </td></tr>
<tr><td align="left" balign="left"> + warn(arg0 : java.lang.String, arg1 : java.lang.Object) </td></tr>
<tr><td align="left" balign="left"> + warn(arg0 : java.lang.String, arg1 : java.lang.Object, arg2 : java.lang.Object) </td></tr>
<tr><td align="left" balign="left"> + warn(arg0 : java.lang.String, arg1 : java.lang.Object[]) </td></tr>
<tr><td align="left" balign="left"> + warn(arg0 : org.slf4j.Marker, arg1 : java.lang.String) </td></tr>
<tr><td align="left" balign="left"> + warn(arg0 : org.slf4j.Marker, arg1 : java.lang.String, arg2 : java.lang.Object) </td></tr>
<tr><td align="left" balign="left"> + warn(arg0 : org.slf4j.Marker, arg1 : java.lang.String, arg2 : java.lang.Object[]) </td></tr>
<tr><td align="left" balign="left"> + warn(arg0 : org.slf4j.Marker, arg1 : java.lang.String, arg2 : java.lang.Object, arg3 : java.lang.Object) </td></tr>
<tr><td align="left" balign="left"> + warn(arg0 : org.slf4j.Marker, arg1 : java.lang.String, arg2 : java.lang.Throwable) </td></tr>
<tr><td align="left" balign="left"> + isAdditive() : boolean </td></tr>
<tr><td align="left" balign="left"> + setAdditive(arg0 : boolean) </td></tr>
<tr><td align="left" balign="left"> + toString() : java.lang.String </td></tr>
<tr><td align="left" balign="left"> - callTurboFilters(arg0 : org.slf4j.Marker, arg1 : ch.qos.logback.classic.Level) : ch.qos.logback.core.spi.FilterReply </td></tr>
<tr><td align="left" balign="left"> + getLoggerContext() : ch.qos.logback.classic.LoggerContext </td></tr>
<tr><td align="left" balign="left"> + log(arg0 : org.slf4j.Marker, arg1 : java.lang.String, arg2 : int, arg3 : java.lang.String, arg4 : java.lang.Object[], arg5 : java.lang.Throwable) </td></tr>
<tr><td align="left" balign="left"> # readResolve() : java.lang.Object </td></tr>
		</table></td></tr>
		</table>>, URL="http://java.sun.com/j2se/1.4.2/docs/api/ch/qos/logback/classic/Logger.html", fontname="Trebuchet MS", fontcolor="black", fontsize=9.0];
	// ch.qos.logback.core.filter.Filter<E>
	c12690 [label=<<table title="ch.qos.logback.core.filter.Filter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/ch/qos/logback/core/filter/Filter.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Trebuchet MS"> Filter&lt;E&gt; </font></td></tr>
<tr><td align="center" balign="center"><font face="Trebuchet MS" point-size="7.0"> ch.qos.logback.core.filter </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - name : java.lang.String </td></tr>
<tr><td align="left" balign="left"> ~ start : boolean </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Filter() </td></tr>
<tr><td align="left" balign="left"> + start() </td></tr>
<tr><td align="left" balign="left"> + isStarted() : boolean </td></tr>
<tr><td align="left" balign="left"> + stop() </td></tr>
<tr><td align="left" balign="left"><font face="Trebuchet MS" point-size="9.0"> + decide(arg0 : E) : ch.qos.logback.core.spi.FilterReply </font></td></tr>
<tr><td align="left" balign="left"> + getName() : java.lang.String </td></tr>
<tr><td align="left" balign="left"> + setName(arg0 : java.lang.String) </td></tr>
		</table></td></tr>
		</table>>, URL="http://java.sun.com/j2se/1.4.2/docs/api/ch/qos/logback/core/filter/Filter.html", fontname="Trebuchet MS", fontcolor="black", fontsize=9.0];
	// ch.qos.logback.core.encoder.Encoder<E>
	c12688 [label=<<table title="ch.qos.logback.core.encoder.Encoder" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/ch/qos/logback/core/encoder/Encoder.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"><font face="Trebuchet MS"> Encoder&lt;E&gt; </font></td></tr>
<tr><td align="center" balign="center"><font face="Trebuchet MS" point-size="7.0"> ch.qos.logback.core.encoder </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + init(arg0 : java.io.OutputStream) </td></tr>
<tr><td align="left" balign="left"> + doEncode(arg0 : E) </td></tr>
<tr><td align="left" balign="left"> + close() </td></tr>
		</table></td></tr>
		</table>>, URL="http://java.sun.com/j2se/1.4.2/docs/api/ch/qos/logback/core/encoder/Encoder.html", fontname="Trebuchet MS", fontcolor="black", fontsize=9.0];
}

