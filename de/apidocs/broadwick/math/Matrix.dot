#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Trebuchet MS",fontsize=10,labelfontname="Trebuchet MS",labelfontsize=10];
	node [fontname="Trebuchet MS",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// broadwick.math.Matrix
	c17339 [label=<<table title="broadwick.math.Matrix" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./Matrix.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Trebuchet MS"> Matrix </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - numRows : int </td></tr>
<tr><td align="left" balign="left"> - numCols : int </td></tr>
<tr><td align="left" balign="left"> - data : Array2DRowRealMatrix </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - Matrix(data : Array2DRowRealMatrix) </td></tr>
<tr><td align="left" balign="left"> - Matrix(data : double[][]) </td></tr>
<tr><td align="left" balign="left"> + Matrix(rowDimension : int, columnDimension : int) </td></tr>
<tr><td align="left" balign="left"> + element(row : int, column : int) : double </td></tr>
<tr><td align="left" balign="left"> + setEntry(row : int, column : int, value : double) : double </td></tr>
<tr><td align="left" balign="left"> + toArray() : double[][] </td></tr>
<tr><td align="left" balign="left"> + copy() : Matrix </td></tr>
<tr><td align="left" balign="left"> + rows() : int </td></tr>
<tr><td align="left" balign="left"> + columns() : int </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + inverse() : Matrix </td></tr>
<tr><td align="left" balign="left"> + transpose() : Matrix </td></tr>
<tr><td align="left" balign="left"> + subtract(m : Matrix) : Matrix </td></tr>
<tr><td align="left" balign="left"> + multiply(m : Matrix) : Matrix </td></tr>
<tr><td align="left" balign="left"> + multiply(d : double) : Matrix </td></tr>
<tr><td align="left" balign="left"> + multiply(v : Vector) : Vector </td></tr>
<tr><td align="left" balign="left"> + preMultiply(v : Vector) : Vector </td></tr>
		</table></td></tr>
		</table>>, URL="./Matrix.html", fontname="Trebuchet MS", fontcolor="black", fontsize=9.0];
	// broadwick.statistics.distributions.TruncatedMultivariateNormalDistribution
	c17374 [label=<<table title="broadwick.statistics.distributions.TruncatedMultivariateNormalDistribution" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../statistics/distributions/TruncatedMultivariateNormalDistribution.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Trebuchet MS"> TruncatedMultivariateNormalDistribution </font></td></tr>
<tr><td align="center" balign="center"><font face="Trebuchet MS" point-size="7.0"> broadwick.statistics.distributions </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - n : int </td></tr>
<tr><td align="left" balign="left"> - lowerBounds : broadwick.math.Vector </td></tr>
<tr><td align="left" balign="left"> - upperBounds : broadwick.math.Vector </td></tr>
<tr><td align="left" balign="left"> - means : broadwick.math.Vector </td></tr>
<tr><td align="left" balign="left"> - covariances : broadwick.math.Matrix </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + TruncatedMultivariateNormalDistribution(means : broadwick.math.Vector, covariances : broadwick.math.Matrix, lb : broadwick.math.Vector, ub : broadwick.math.Vector) </td></tr>
<tr><td align="left" balign="left"> + sample() : broadwick.math.Vector </td></tr>
		</table></td></tr>
		</table>>, URL="../statistics/distributions/TruncatedMultivariateNormalDistribution.html", fontname="Trebuchet MS", fontcolor="black", fontsize=9.0];
	// broadwick.math.Matrix NAVASSOC org.apache.commons.math3.linear.Array2DRowRealMatrix
	c17339:p -> c17429:p [taillabel="", label="", headlabel="", fontname="Trebuchet MS", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// broadwick.statistics.distributions.TruncatedMultivariateNormalDistribution NAVASSOC broadwick.math.Matrix
	c17374:p -> c17339:p [taillabel="", label="", headlabel="", fontname="Trebuchet MS", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// org.apache.commons.math3.linear.Array2DRowRealMatrix
	c17429 [label=<<table title="org.apache.commons.math3.linear.Array2DRowRealMatrix" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/org/apache/commons/math3/linear/Array2DRowRealMatrix.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Trebuchet MS"> Array2DRowRealMatrix </font></td></tr>
<tr><td align="center" balign="center"><font face="Trebuchet MS" point-size="7.0"> org.apache.commons.math3.linear </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - serialVersionUID : long </td></tr>
<tr><td align="left" balign="left"> - data : double[][] </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Array2DRowRealMatrix() </td></tr>
<tr><td align="left" balign="left"> + Array2DRowRealMatrix(arg0 : int, arg1 : int) </td></tr>
<tr><td align="left" balign="left"> + Array2DRowRealMatrix(arg0 : double[][]) </td></tr>
<tr><td align="left" balign="left"> + Array2DRowRealMatrix(arg0 : double[][], arg1 : boolean) </td></tr>
<tr><td align="left" balign="left"> + Array2DRowRealMatrix(arg0 : double[]) </td></tr>
<tr><td align="left" balign="left"> + createMatrix(arg0 : int, arg1 : int) : org.apache.commons.math3.linear.RealMatrix </td></tr>
<tr><td align="left" balign="left"> + copy() : org.apache.commons.math3.linear.RealMatrix </td></tr>
<tr><td align="left" balign="left"> + add(arg0 : org.apache.commons.math3.linear.Array2DRowRealMatrix) : org.apache.commons.math3.linear.Array2DRowRealMatrix </td></tr>
<tr><td align="left" balign="left"> + subtract(arg0 : org.apache.commons.math3.linear.Array2DRowRealMatrix) : org.apache.commons.math3.linear.Array2DRowRealMatrix </td></tr>
<tr><td align="left" balign="left"> + multiply(arg0 : org.apache.commons.math3.linear.Array2DRowRealMatrix) : org.apache.commons.math3.linear.Array2DRowRealMatrix </td></tr>
<tr><td align="left" balign="left"> + getData() : double[][] </td></tr>
<tr><td align="left" balign="left"> + getDataRef() : double[][] </td></tr>
<tr><td align="left" balign="left"> + setSubMatrix(arg0 : double[][], arg1 : int, arg2 : int) </td></tr>
<tr><td align="left" balign="left"> + getEntry(arg0 : int, arg1 : int) : double </td></tr>
<tr><td align="left" balign="left"> + setEntry(arg0 : int, arg1 : int, arg2 : double) </td></tr>
<tr><td align="left" balign="left"> + addToEntry(arg0 : int, arg1 : int, arg2 : double) </td></tr>
<tr><td align="left" balign="left"> + multiplyEntry(arg0 : int, arg1 : int, arg2 : double) </td></tr>
<tr><td align="left" balign="left"> + getRowDimension() : int </td></tr>
<tr><td align="left" balign="left"> + getColumnDimension() : int </td></tr>
<tr><td align="left" balign="left"> + operate(arg0 : double[]) : double[] </td></tr>
<tr><td align="left" balign="left"> + preMultiply(arg0 : double[]) : double[] </td></tr>
<tr><td align="left" balign="left"> + walkInRowOrder(arg0 : org.apache.commons.math3.linear.RealMatrixChangingVisitor) : double </td></tr>
<tr><td align="left" balign="left"> + walkInRowOrder(arg0 : org.apache.commons.math3.linear.RealMatrixPreservingVisitor) : double </td></tr>
<tr><td align="left" balign="left"> + walkInRowOrder(arg0 : org.apache.commons.math3.linear.RealMatrixChangingVisitor, arg1 : int, arg2 : int, arg3 : int, arg4 : int) : double </td></tr>
<tr><td align="left" balign="left"> + walkInRowOrder(arg0 : org.apache.commons.math3.linear.RealMatrixPreservingVisitor, arg1 : int, arg2 : int, arg3 : int, arg4 : int) : double </td></tr>
<tr><td align="left" balign="left"> + walkInColumnOrder(arg0 : org.apache.commons.math3.linear.RealMatrixChangingVisitor) : double </td></tr>
<tr><td align="left" balign="left"> + walkInColumnOrder(arg0 : org.apache.commons.math3.linear.RealMatrixPreservingVisitor) : double </td></tr>
<tr><td align="left" balign="left"> + walkInColumnOrder(arg0 : org.apache.commons.math3.linear.RealMatrixChangingVisitor, arg1 : int, arg2 : int, arg3 : int, arg4 : int) : double </td></tr>
<tr><td align="left" balign="left"> + walkInColumnOrder(arg0 : org.apache.commons.math3.linear.RealMatrixPreservingVisitor, arg1 : int, arg2 : int, arg3 : int, arg4 : int) : double </td></tr>
<tr><td align="left" balign="left"> - copyOut() : double[][] </td></tr>
<tr><td align="left" balign="left"> - copyIn(arg0 : double[][]) </td></tr>
		</table></td></tr>
		</table>>, URL="http://java.sun.com/j2se/1.4.2/docs/api/org/apache/commons/math3/linear/Array2DRowRealMatrix.html", fontname="Trebuchet MS", fontcolor="black", fontsize=9.0];
}

