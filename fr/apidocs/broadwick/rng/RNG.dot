#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Trebuchet MS",fontsize=10,labelfontname="Trebuchet MS",labelfontsize=10];
	node [fontname="Trebuchet MS",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// broadwick.rng.RNG
	c22811 [label=<<table title="broadwick.rng.RNG" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./RNG.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Trebuchet MS"> RNG </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - generator : RandomDataGenerator </td></tr>
<tr><td align="left" balign="left"> - name : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + RNG() </td></tr>
<tr><td align="left" balign="left"> + RNG(gen : RNG.Generator) </td></tr>
<tr><td align="left" balign="left"> + validGenerators() : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + seed(seed : int) </td></tr>
<tr><td align="left" balign="left"> + getDouble() : double </td></tr>
<tr><td align="left" balign="left"> + getDouble(lower : double, upper : double) : double </td></tr>
<tr><td align="left" balign="left"> + getInteger(lower : int, upper : int) : int </td></tr>
<tr><td align="left" balign="left"> + getPoisson(mean : double) : long </td></tr>
<tr><td align="left" balign="left"> + getGaussian(mu : double, sigma : double) : double </td></tr>
<tr><td align="left" balign="left"> + getBoolean() : boolean </td></tr>
<tr><td align="left" balign="left"> + getBinomial(n : int, p : double) : int </td></tr>
<tr><td align="left" balign="left"> + selectOneOf(objects : T[]) : T </td></tr>
<tr><td align="left" balign="left"> + selectOneOf(objects : T[], probabilities : double[]) : T </td></tr>
<tr><td align="left" balign="left"> + selectOneOf(set : Set&lt;T&gt;) : T </td></tr>
<tr><td align="left" balign="left"> + selectOneOf(objects : Collection&lt;T&gt;) : T </td></tr>
<tr><td align="left" balign="left"> + selectManyOf(objects : T[], n : int) : List&lt;T&gt; </td></tr>
<tr><td align="left" balign="left"> + selectManyOf(objects : Collection&lt;T&gt;, n : int) : List&lt;T&gt; </td></tr>
<tr><td align="left" balign="left"> + selectManyOf(objects : Set&lt;T&gt;, n : int) : Set&lt;T&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./RNG.html", fontname="Trebuchet MS", fontcolor="black", fontsize=9.0];
	// broadwick.statistics.distributions.TruncatedNormalDistribution
	c22813 [label=<<table title="broadwick.statistics.distributions.TruncatedNormalDistribution" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../statistics/distributions/TruncatedNormalDistribution.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Trebuchet MS"> TruncatedNormalDistribution </font></td></tr>
<tr><td align="center" balign="center"><font face="Trebuchet MS" point-size="7.0"> broadwick.statistics.distributions </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - mean : double </td></tr>
<tr><td align="left" balign="left"> - sd : double </td></tr>
<tr><td align="left" balign="left"> - lower : double </td></tr>
<tr><td align="left" balign="left"> - upper : double </td></tr>
<tr><td align="left" balign="left"> - generator : broadwick.rng.RNG </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + TruncatedNormalDistribution(mean : double, sd : double, lb : double, ub : double) </td></tr>
<tr><td align="left" balign="left"> + sample() : double </td></tr>
<tr><td align="left" balign="left"> + rejectionSample() : double </td></tr>
		</table></td></tr>
		</table>>, URL="../statistics/distributions/TruncatedNormalDistribution.html", fontname="Trebuchet MS", fontcolor="black", fontsize=9.0];
	// broadwick.rng.RNG NAVASSOC org.apache.commons.math3.random.RandomDataGenerator
	c22811:p -> c22870:p [taillabel="", label="", headlabel="", fontname="Trebuchet MS", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// broadwick.statistics.distributions.TruncatedNormalDistribution NAVASSOC broadwick.rng.RNG
	c22813:p -> c22811:p [taillabel="", label="", headlabel="", fontname="Trebuchet MS", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// org.apache.commons.math3.random.RandomDataGenerator
	c22870 [label=<<table title="org.apache.commons.math3.random.RandomDataGenerator" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/org/apache/commons/math3/random/RandomDataGenerator.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Trebuchet MS"> RandomDataGenerator </font></td></tr>
<tr><td align="center" balign="center"><font face="Trebuchet MS" point-size="7.0"> org.apache.commons.math3.random </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - serialVersionUID : long </td></tr>
<tr><td align="left" balign="left"> - rand : org.apache.commons.math3.random.RandomGenerator </td></tr>
<tr><td align="left" balign="left"> - secRand : org.apache.commons.math3.random.RandomGenerator </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + RandomDataGenerator() </td></tr>
<tr><td align="left" balign="left"> + RandomDataGenerator(arg0 : org.apache.commons.math3.random.RandomGenerator) </td></tr>
<tr><td align="left" balign="left"> + nextHexString(arg0 : int) : java.lang.String </td></tr>
<tr><td align="left" balign="left"> + nextInt(arg0 : int, arg1 : int) : int </td></tr>
<tr><td align="left" balign="left"> + nextLong(arg0 : long, arg1 : long) : long </td></tr>
<tr><td align="left" balign="left"> - nextLong(arg0 : org.apache.commons.math3.random.RandomGenerator, arg1 : long) : long </td></tr>
<tr><td align="left" balign="left"> + nextSecureHexString(arg0 : int) : java.lang.String </td></tr>
<tr><td align="left" balign="left"> + nextSecureInt(arg0 : int, arg1 : int) : int </td></tr>
<tr><td align="left" balign="left"> + nextSecureLong(arg0 : long, arg1 : long) : long </td></tr>
<tr><td align="left" balign="left"> + nextPoisson(arg0 : double) : long </td></tr>
<tr><td align="left" balign="left"> + nextGaussian(arg0 : double, arg1 : double) : double </td></tr>
<tr><td align="left" balign="left"> + nextExponential(arg0 : double) : double </td></tr>
<tr><td align="left" balign="left"> + nextGamma(arg0 : double, arg1 : double) : double </td></tr>
<tr><td align="left" balign="left"> + nextHypergeometric(arg0 : int, arg1 : int, arg2 : int) : int </td></tr>
<tr><td align="left" balign="left"> + nextPascal(arg0 : int, arg1 : double) : int </td></tr>
<tr><td align="left" balign="left"> + nextT(arg0 : double) : double </td></tr>
<tr><td align="left" balign="left"> + nextWeibull(arg0 : double, arg1 : double) : double </td></tr>
<tr><td align="left" balign="left"> + nextZipf(arg0 : int, arg1 : double) : int </td></tr>
<tr><td align="left" balign="left"> + nextBeta(arg0 : double, arg1 : double) : double </td></tr>
<tr><td align="left" balign="left"> + nextBinomial(arg0 : int, arg1 : double) : int </td></tr>
<tr><td align="left" balign="left"> + nextCauchy(arg0 : double, arg1 : double) : double </td></tr>
<tr><td align="left" balign="left"> + nextChiSquare(arg0 : double) : double </td></tr>
<tr><td align="left" balign="left"> + nextF(arg0 : double, arg1 : double) : double </td></tr>
<tr><td align="left" balign="left"> + nextUniform(arg0 : double, arg1 : double) : double </td></tr>
<tr><td align="left" balign="left"> + nextUniform(arg0 : double, arg1 : double, arg2 : boolean) : double </td></tr>
<tr><td align="left" balign="left"> + nextPermutation(arg0 : int, arg1 : int) : int[] </td></tr>
<tr><td align="left" balign="left"> + nextSample(arg0 : java.util.Collection&lt;?&gt;, arg1 : int) : java.lang.Object[] </td></tr>
<tr><td align="left" balign="left"> + reSeed(arg0 : long) </td></tr>
<tr><td align="left" balign="left"> + reSeedSecure() </td></tr>
<tr><td align="left" balign="left"> + reSeedSecure(arg0 : long) </td></tr>
<tr><td align="left" balign="left"> + reSeed() </td></tr>
<tr><td align="left" balign="left"> + setSecureAlgorithm(arg0 : java.lang.String, arg1 : java.lang.String) </td></tr>
<tr><td align="left" balign="left"> + getRandomGenerator() : org.apache.commons.math3.random.RandomGenerator </td></tr>
<tr><td align="left" balign="left"> - initRan() </td></tr>
<tr><td align="left" balign="left"> - getSecRan() : org.apache.commons.math3.random.RandomGenerator </td></tr>
		</table></td></tr>
		</table>>, URL="http://java.sun.com/j2se/1.4.2/docs/api/org/apache/commons/math3/random/RandomDataGenerator.html", fontname="Trebuchet MS", fontcolor="black", fontsize=9.0];
}

