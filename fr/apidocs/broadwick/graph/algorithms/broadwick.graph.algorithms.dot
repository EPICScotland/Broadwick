#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Trebuchet MS",fontsize=10,labelfontname="Trebuchet MS",labelfontsize=10];
	node [fontname="Trebuchet MS",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// broadwick.graph.algorithms.ShortestPath<V extends broadwick.graph.Vertex, E extends broadwick.graph.Edge<V>>
	c931 [label=<<table title="broadwick.graph.algorithms.ShortestPath" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ShortestPath.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Trebuchet MS"> ShortestPath&lt;V extends Vertex, E extends Edge&lt;V&gt;&gt; </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - jungGraph : AbstractTypedGraph&lt;V, E&gt; </td></tr>
<tr><td align="left" balign="left"> - weightTransformer : Transformer&lt;E, Number&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ShortestPath(graph : Graph&lt;V, E&gt;) </td></tr>
<tr><td align="left" balign="left"> + calculateDistance(source : V, target : V) : double </td></tr>
<tr><td align="left" balign="left"> + getEdgesInPath(source : V, target : V) : List&lt;E&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./ShortestPath.html", fontname="Trebuchet MS", fontcolor="black", fontsize=9.0];
}

