#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Trebuchet MS",fontsize=10,labelfontname="Trebuchet MS",labelfontsize=10];
	node [fontname="Trebuchet MS",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// broadwick.graph.Vertex
	c10965 [label=<<table title="broadwick.graph.Vertex" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./Vertex.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Trebuchet MS"> Vertex </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # id : String </td></tr>
<tr><td align="left" balign="left"> # xCoord : double </td></tr>
<tr><td align="left" balign="left"> # yCoord : double </td></tr>
<tr><td align="left" balign="left"> - attributes : Collection&lt;VertexAttribute&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Vertex(id : String) </td></tr>
<tr><td align="left" balign="left"> + getAttributeByName(attributeName : String) : VertexAttribute </td></tr>
<tr><td align="left" balign="left"> + addAttribute(attribute : VertexAttribute) : boolean </td></tr>
<tr><td align="left" balign="left"> + setXCoord(x : double) </td></tr>
<tr><td align="left" balign="left"> + setYCoord(y : double) </td></tr>
<tr><td align="left" balign="left"> # finalize() </td></tr>
		</table></td></tr>
		</table>>, URL="./Vertex.html", fontname="Trebuchet MS", fontcolor="black", fontsize=9.0];
	// broadwick.graph.DepthFirstIterator<V extends broadwick.graph.Vertex, E extends broadwick.graph.Edge<V>>
	c10973 [label=<<table title="broadwick.graph.DepthFirstIterator" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./DepthFirstIterator.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Trebuchet MS"> DepthFirstIterator&lt;V extends Vertex, E extends Edge&lt;V&gt;&gt; </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - vertexList : List&lt;V&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + DepthFirstIterator(tree : Tree&lt;V, E&gt;) </td></tr>
<tr><td align="left" balign="left"> + hasNext() : boolean </td></tr>
<tr><td align="left" balign="left"> + next() : V </td></tr>
<tr><td align="left" balign="left"> + remove() </td></tr>
<tr><td align="left" balign="left"> - traverseTree(tree : Tree&lt;V, E&gt;) </td></tr>
		</table></td></tr>
		</table>>, URL="./DepthFirstIterator.html", fontname="Trebuchet MS", fontcolor="black", fontsize=9.0];
	// broadwick.graph.DepthFirstIterator<V extends broadwick.graph.Vertex, E extends broadwick.graph.Edge<V>> NAVASSOC broadwick.graph.Vertex
	c10973:p -> c10965:p [taillabel="", label="", headlabel="*", fontname="Trebuchet MS", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
}

