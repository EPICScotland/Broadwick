#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Trebuchet MS",fontsize=10,labelfontname="Trebuchet MS",labelfontsize=10];
	node [fontname="Trebuchet MS",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// broadwick.graph.Vertex
	c13826 [label=<<table title="broadwick.graph.Vertex" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../Vertex.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Trebuchet MS"> Vertex </font></td></tr>
<tr><td align="center" balign="center"><font face="Trebuchet MS" point-size="7.0"> broadwick.graph </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # id : java.lang.String </td></tr>
<tr><td align="left" balign="left"> # xCoord : double </td></tr>
<tr><td align="left" balign="left"> # yCoord : double </td></tr>
<tr><td align="left" balign="left"> - attributes : java.util.Collection&lt;broadwick.graph.VertexAttribute&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Vertex(id : java.lang.String) </td></tr>
<tr><td align="left" balign="left"> + getAttributeByName(attributeName : java.lang.String) : broadwick.graph.VertexAttribute </td></tr>
<tr><td align="left" balign="left"> + addAttribute(attribute : broadwick.graph.VertexAttribute) : boolean </td></tr>
<tr><td align="left" balign="left"> + setXCoord(x : double) </td></tr>
<tr><td align="left" balign="left"> + setYCoord(y : double) </td></tr>
<tr><td align="left" balign="left"> # finalize() </td></tr>
		</table></td></tr>
		</table>>, URL="../Vertex.html", fontname="Trebuchet MS", fontcolor="black", fontsize=9.0];
	// broadwick.graph.Graph<V extends broadwick.graph.Vertex, E extends broadwick.graph.Edge<V>>
	c13829 [label=<<table title="broadwick.graph.Graph" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../Graph.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"><font face="Trebuchet MS"> Graph&lt;V extends broadwick.graph.Vertex, E extends broadwick.graph.Edge&lt;V&gt;&gt; </font></td></tr>
<tr><td align="center" balign="center"><font face="Trebuchet MS" point-size="7.0"> broadwick.graph </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Trebuchet MS" point-size="9.0"> + getInEdges(vertex : V) : java.util.Collection&lt;E&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Trebuchet MS" point-size="9.0"> + getOutEdges(vertex : V) : java.util.Collection&lt;E&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Trebuchet MS" point-size="9.0"> + getPredecessors(vertex : V) : java.util.Collection&lt;V&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Trebuchet MS" point-size="9.0"> + getSuccessors(vertex : V) : java.util.Collection&lt;V&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Trebuchet MS" point-size="9.0"> + inDegree(vertex : V) : int </font></td></tr>
<tr><td align="left" balign="left"><font face="Trebuchet MS" point-size="9.0"> + outDegree(vertex : V) : int </font></td></tr>
<tr><td align="left" balign="left"><font face="Trebuchet MS" point-size="9.0"> + isPredecessor(v1 : V, v2 : V) : boolean </font></td></tr>
<tr><td align="left" balign="left"><font face="Trebuchet MS" point-size="9.0"> + isSuccessor(v1 : V, v2 : V) : boolean </font></td></tr>
<tr><td align="left" balign="left"><font face="Trebuchet MS" point-size="9.0"> + getPredecessorCount(vertex : V) : int </font></td></tr>
<tr><td align="left" balign="left"><font face="Trebuchet MS" point-size="9.0"> + getSuccessorCount(vertex : V) : int </font></td></tr>
<tr><td align="left" balign="left"><font face="Trebuchet MS" point-size="9.0"> + getSource(directedEdge : E) : V </font></td></tr>
<tr><td align="left" balign="left"><font face="Trebuchet MS" point-size="9.0"> + getDest(directedEdge : E) : V </font></td></tr>
<tr><td align="left" balign="left"><font face="Trebuchet MS" point-size="9.0"> + isSource(vertex : V, edge : E) : boolean </font></td></tr>
<tr><td align="left" balign="left"><font face="Trebuchet MS" point-size="9.0"> + isDest(vertex : V, edge : E) : boolean </font></td></tr>
<tr><td align="left" balign="left"><font face="Trebuchet MS" point-size="9.0"> + addVertex(vertex : V) : boolean </font></td></tr>
<tr><td align="left" balign="left"><font face="Trebuchet MS" point-size="9.0"> + addEdge(e : E, v1 : V, v2 : V) : boolean </font></td></tr>
<tr><td align="left" balign="left"><font face="Trebuchet MS" point-size="9.0"> + addEdge(e : E, v1 : V, v2 : V, edgeType : broadwick.graph.EdgeType) : boolean </font></td></tr>
<tr><td align="left" balign="left"><font face="Trebuchet MS" point-size="9.0"> + getEndpoints(edge : E) : broadwick.utils.Pair&lt;V, V&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Trebuchet MS" point-size="9.0"> + getOpposite(vertex : V, edge : E) : V </font></td></tr>
<tr><td align="left" balign="left"><font face="Trebuchet MS" point-size="9.0"> + getVertexCount() : int </font></td></tr>
<tr><td align="left" balign="left"><font face="Trebuchet MS" point-size="9.0"> + getVertices() : java.util.Collection&lt;V&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Trebuchet MS" point-size="9.0"> + getVertex(id : java.lang.String) : V </font></td></tr>
<tr><td align="left" balign="left"><font face="Trebuchet MS" point-size="9.0"> + getEdge(id : java.lang.String) : E </font></td></tr>
<tr><td align="left" balign="left"><font face="Trebuchet MS" point-size="9.0"> + getEdges() : java.util.Collection&lt;E&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Trebuchet MS" point-size="9.0"> + removeVertex(vertex : V) : boolean </font></td></tr>
<tr><td align="left" balign="left"><font face="Trebuchet MS" point-size="9.0"> + removeEdge(edge : E) : boolean </font></td></tr>
<tr><td align="left" balign="left"><font face="Trebuchet MS" point-size="9.0"> + getVertexAttributes() : java.util.Collection&lt;broadwick.graph.VertexAttribute&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Trebuchet MS" point-size="9.0"> + getEdgeAttributes() : java.util.Collection&lt;broadwick.graph.EdgeAttribute&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Trebuchet MS" point-size="9.0"> + addVertexAttribute(name : java.lang.String, type : java.lang.Class&lt;&gt;, defaultValue : java.lang.String) </font></td></tr>
<tr><td align="left" balign="left"><font face="Trebuchet MS" point-size="9.0"> + addEdgeAttribute(name : java.lang.String, type : java.lang.Class&lt;&gt;, defaultValue : java.lang.String) </font></td></tr>
<tr><td align="left" balign="left"><font face="Trebuchet MS" point-size="9.0"> + getEdgeType() : broadwick.graph.EdgeType </font></td></tr>
		</table></td></tr>
		</table>>, URL="../Graph.html", fontname="Trebuchet MS", fontcolor="black", fontsize=9.0];
	// broadwick.graph.Edge<V extends broadwick.graph.Vertex>
	c13832 [label=<<table title="broadwick.graph.Edge" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../Edge.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Trebuchet MS"> Edge&lt;V extends broadwick.graph.Vertex&gt; </font></td></tr>
<tr><td align="center" balign="center"><font face="Trebuchet MS" point-size="7.0"> broadwick.graph </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # id : java.lang.String </td></tr>
<tr><td align="left" balign="left"> # source : V </td></tr>
<tr><td align="left" balign="left"> # destination : V </td></tr>
<tr><td align="left" balign="left"> # weight : java.lang.Double </td></tr>
<tr><td align="left" balign="left"> - attributes : java.util.Collection&lt;broadwick.graph.EdgeAttribute&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Edge(id : java.lang.String) </td></tr>
<tr><td align="left" balign="left"> + Edge(id : java.lang.String, source : V, destination : V) </td></tr>
<tr><td align="left" balign="left"> + Edge(source : V, destination : V) </td></tr>
<tr><td align="left" balign="left"> + Edge(source : V, destination : V, weight : java.lang.Double) </td></tr>
<tr><td align="left" balign="left"> + Edge(id : java.lang.String, source : V, destination : V, weight : java.lang.Double) </td></tr>
<tr><td align="left" balign="left"> + toString() : java.lang.String </td></tr>
<tr><td align="left" balign="left"> + getAttributeByName(attributeName : java.lang.String) : broadwick.graph.EdgeAttribute </td></tr>
<tr><td align="left" balign="left"> + addAttribute(attribute : broadwick.graph.EdgeAttribute) : boolean </td></tr>
<tr><td align="left" balign="left"> # finalize() </td></tr>
		</table></td></tr>
		</table>>, URL="../Edge.html", fontname="Trebuchet MS", fontcolor="black", fontsize=9.0];
	// broadwick.graph.writer.GraphMl
	c13837 [label=<<table title="broadwick.graph.writer.GraphMl" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./GraphMl.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Trebuchet MS"> GraphMl </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - GraphMl() </td></tr>
<tr><td align="left" balign="left"> + toString(network : Graph&lt;?, ?&gt;, directed : boolean) : String </td></tr>
<tr><td align="left" balign="left"> + toString(network : Graph&lt;?, ?&gt;) : String </td></tr>
<tr><td align="left" balign="left"> + save(file : String, network : Graph&lt;?, ?&gt;) </td></tr>
<tr><td align="left" balign="left"> - addEdge(edge : Edge&lt;&gt;, element : Element) </td></tr>
<tr><td align="left" balign="left"> - addNode(vertex : Vertex, element : Element) </td></tr>
		</table></td></tr>
		</table>>, URL="./GraphMl.html", fontname="Trebuchet MS", fontcolor="black", fontsize=9.0];
	// broadwick.graph.writer.GraphMl DEPEND broadwick.graph.Graph<V extends broadwick.graph.Vertex, E extends broadwick.graph.Edge<V>>
	c13837:p -> c13829:p [taillabel="", label="", headlabel="", fontname="Trebuchet MS", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// broadwick.graph.writer.GraphMl DEPEND broadwick.graph.Edge<V extends broadwick.graph.Vertex>
	c13837:p -> c13832:p [taillabel="", label="", headlabel="", fontname="Trebuchet MS", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// broadwick.graph.writer.GraphMl DEPEND broadwick.graph.Graph<V extends broadwick.graph.Vertex, E extends broadwick.graph.Edge<V>>
	c13837:p -> c13829:p [taillabel="", label="", headlabel="", fontname="Trebuchet MS", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// broadwick.graph.writer.GraphMl DEPEND org.jdom2.Element
	c13837:p -> c13936:p [taillabel="", label="", headlabel="", fontname="Trebuchet MS", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// broadwick.graph.writer.GraphMl DEPEND broadwick.graph.Vertex
	c13837:p -> c13826:p [taillabel="", label="", headlabel="", fontname="Trebuchet MS", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// broadwick.graph.writer.GraphMl DEPEND broadwick.graph.Graph<V extends broadwick.graph.Vertex, E extends broadwick.graph.Edge<V>>
	c13837:p -> c13829:p [taillabel="", label="", headlabel="", fontname="Trebuchet MS", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// org.jdom2.Element
	c13936 [label=<<table title="org.jdom2.Element" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/org/jdom2/Element.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Trebuchet MS"> Element </font></td></tr>
<tr><td align="center" balign="center"><font face="Trebuchet MS" point-size="7.0"> org.jdom2 </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - INITIAL_ARRAY_SIZE : int </td></tr>
<tr><td align="left" balign="left"> # name : java.lang.String </td></tr>
<tr><td align="left" balign="left"> # namespace : org.jdom2.Namespace </td></tr>
<tr><td align="left" balign="left"> ~ additionalNamespaces : java.util.List&lt;org.jdom2.Namespace&gt; </td></tr>
<tr><td align="left" balign="left"> ~ attributes : org.jdom2.AttributeList </td></tr>
<tr><td align="left" balign="left"> ~ content : org.jdom2.ContentList </td></tr>
<tr><td align="left" balign="left"> - serialVersionUID : long </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # Element() </td></tr>
<tr><td align="left" balign="left"> + Element(arg0 : java.lang.String, arg1 : org.jdom2.Namespace) </td></tr>
<tr><td align="left" balign="left"> + Element(arg0 : java.lang.String) </td></tr>
<tr><td align="left" balign="left"> + Element(arg0 : java.lang.String, arg1 : java.lang.String) </td></tr>
<tr><td align="left" balign="left"> + Element(arg0 : java.lang.String, arg1 : java.lang.String, arg2 : java.lang.String) </td></tr>
<tr><td align="left" balign="left"> + getName() : java.lang.String </td></tr>
<tr><td align="left" balign="left"> + setName(arg0 : java.lang.String) : org.jdom2.Element </td></tr>
<tr><td align="left" balign="left"> + getNamespace() : org.jdom2.Namespace </td></tr>
<tr><td align="left" balign="left"> + setNamespace(arg0 : org.jdom2.Namespace) : org.jdom2.Element </td></tr>
<tr><td align="left" balign="left"> + getNamespacePrefix() : java.lang.String </td></tr>
<tr><td align="left" balign="left"> + getNamespaceURI() : java.lang.String </td></tr>
<tr><td align="left" balign="left"> + getNamespace(arg0 : java.lang.String) : org.jdom2.Namespace </td></tr>
<tr><td align="left" balign="left"> + getQualifiedName() : java.lang.String </td></tr>
<tr><td align="left" balign="left"> + addNamespaceDeclaration(arg0 : org.jdom2.Namespace) : boolean </td></tr>
<tr><td align="left" balign="left"> + removeNamespaceDeclaration(arg0 : org.jdom2.Namespace) </td></tr>
<tr><td align="left" balign="left"> + getAdditionalNamespaces() : java.util.List&lt;org.jdom2.Namespace&gt; </td></tr>
<tr><td align="left" balign="left"> + getValue() : java.lang.String </td></tr>
<tr><td align="left" balign="left"> + isRootElement() : boolean </td></tr>
<tr><td align="left" balign="left"> + getContentSize() : int </td></tr>
<tr><td align="left" balign="left"> + indexOf(arg0 : org.jdom2.Content) : int </td></tr>
<tr><td align="left" balign="left"> + getText() : java.lang.String </td></tr>
<tr><td align="left" balign="left"> + getTextTrim() : java.lang.String </td></tr>
<tr><td align="left" balign="left"> + getTextNormalize() : java.lang.String </td></tr>
<tr><td align="left" balign="left"> + getChildText(arg0 : java.lang.String) : java.lang.String </td></tr>
<tr><td align="left" balign="left"> + getChildTextTrim(arg0 : java.lang.String) : java.lang.String </td></tr>
<tr><td align="left" balign="left"> + getChildTextNormalize(arg0 : java.lang.String) : java.lang.String </td></tr>
<tr><td align="left" balign="left"> + getChildText(arg0 : java.lang.String, arg1 : org.jdom2.Namespace) : java.lang.String </td></tr>
<tr><td align="left" balign="left"> + getChildTextTrim(arg0 : java.lang.String, arg1 : org.jdom2.Namespace) : java.lang.String </td></tr>
<tr><td align="left" balign="left"> + getChildTextNormalize(arg0 : java.lang.String, arg1 : org.jdom2.Namespace) : java.lang.String </td></tr>
<tr><td align="left" balign="left"> + setText(arg0 : java.lang.String) : org.jdom2.Element </td></tr>
<tr><td align="left" balign="left"> + coalesceText(arg0 : boolean) : boolean </td></tr>
<tr><td align="left" balign="left"> + getContent() : java.util.List&lt;org.jdom2.Content&gt; </td></tr>
<tr><td align="left" balign="left"> + getContent(arg0 : org.jdom2.filter.Filter&lt;E&gt;) : java.util.List&lt;E&gt; </td></tr>
<tr><td align="left" balign="left"> + removeContent() : java.util.List&lt;org.jdom2.Content&gt; </td></tr>
<tr><td align="left" balign="left"> + removeContent(arg0 : org.jdom2.filter.Filter&lt;F&gt;) : java.util.List&lt;F&gt; </td></tr>
<tr><td align="left" balign="left"> + setContent(arg0 : java.util.Collection&lt;?&gt;) : org.jdom2.Element </td></tr>
<tr><td align="left" balign="left"> + setContent(arg0 : int, arg1 : org.jdom2.Content) : org.jdom2.Element </td></tr>
<tr><td align="left" balign="left"> + setContent(arg0 : int, arg1 : java.util.Collection&lt;?&gt;) : org.jdom2.Parent </td></tr>
<tr><td align="left" balign="left"> + addContent(arg0 : java.lang.String) : org.jdom2.Element </td></tr>
<tr><td align="left" balign="left"> + addContent(arg0 : org.jdom2.Content) : org.jdom2.Element </td></tr>
<tr><td align="left" balign="left"> + addContent(arg0 : java.util.Collection&lt;?&gt;) : org.jdom2.Element </td></tr>
<tr><td align="left" balign="left"> + addContent(arg0 : int, arg1 : org.jdom2.Content) : org.jdom2.Element </td></tr>
<tr><td align="left" balign="left"> + addContent(arg0 : int, arg1 : java.util.Collection&lt;?&gt;) : org.jdom2.Element </td></tr>
<tr><td align="left" balign="left"> + cloneContent() : java.util.List&lt;org.jdom2.Content&gt; </td></tr>
<tr><td align="left" balign="left"> + getContent(arg0 : int) : org.jdom2.Content </td></tr>
<tr><td align="left" balign="left"> + removeContent(arg0 : org.jdom2.Content) : boolean </td></tr>
<tr><td align="left" balign="left"> + removeContent(arg0 : int) : org.jdom2.Content </td></tr>
<tr><td align="left" balign="left"> + setContent(arg0 : org.jdom2.Content) : org.jdom2.Element </td></tr>
<tr><td align="left" balign="left"> + isAncestor(arg0 : org.jdom2.Element) : boolean </td></tr>
<tr><td align="left" balign="left"> + hasAttributes() : boolean </td></tr>
<tr><td align="left" balign="left"> + hasAdditionalNamespaces() : boolean </td></tr>
<tr><td align="left" balign="left"> ~ getAttributeList() : org.jdom2.AttributeList </td></tr>
<tr><td align="left" balign="left"> + getAttributes() : java.util.List&lt;org.jdom2.Attribute&gt; </td></tr>
<tr><td align="left" balign="left"> + getAttribute(arg0 : java.lang.String) : org.jdom2.Attribute </td></tr>
<tr><td align="left" balign="left"> + getAttribute(arg0 : java.lang.String, arg1 : org.jdom2.Namespace) : org.jdom2.Attribute </td></tr>
<tr><td align="left" balign="left"> + getAttributeValue(arg0 : java.lang.String) : java.lang.String </td></tr>
<tr><td align="left" balign="left"> + getAttributeValue(arg0 : java.lang.String, arg1 : java.lang.String) : java.lang.String </td></tr>
<tr><td align="left" balign="left"> + getAttributeValue(arg0 : java.lang.String, arg1 : org.jdom2.Namespace) : java.lang.String </td></tr>
<tr><td align="left" balign="left"> + getAttributeValue(arg0 : java.lang.String, arg1 : org.jdom2.Namespace, arg2 : java.lang.String) : java.lang.String </td></tr>
<tr><td align="left" balign="left"> + setAttributes(arg0 : java.util.Collection&lt;?&gt;) : org.jdom2.Element </td></tr>
<tr><td align="left" balign="left"> + setAttribute(arg0 : java.lang.String, arg1 : java.lang.String) : org.jdom2.Element </td></tr>
<tr><td align="left" balign="left"> + setAttribute(arg0 : java.lang.String, arg1 : java.lang.String, arg2 : org.jdom2.Namespace) : org.jdom2.Element </td></tr>
<tr><td align="left" balign="left"> + setAttribute(arg0 : org.jdom2.Attribute) : org.jdom2.Element </td></tr>
<tr><td align="left" balign="left"> + removeAttribute(arg0 : java.lang.String) : boolean </td></tr>
<tr><td align="left" balign="left"> + removeAttribute(arg0 : java.lang.String, arg1 : org.jdom2.Namespace) : boolean </td></tr>
<tr><td align="left" balign="left"> + removeAttribute(arg0 : org.jdom2.Attribute) : boolean </td></tr>
<tr><td align="left" balign="left"> + toString() : java.lang.String </td></tr>
<tr><td align="left" balign="left"> + clone() : org.jdom2.Element </td></tr>
<tr><td align="left" balign="left"> + getDescendants() : org.jdom2.util.IteratorIterable&lt;org.jdom2.Content&gt; </td></tr>
<tr><td align="left" balign="left"> + getDescendants(arg0 : org.jdom2.filter.Filter&lt;F&gt;) : org.jdom2.util.IteratorIterable&lt;F&gt; </td></tr>
<tr><td align="left" balign="left"> + getChildren() : java.util.List&lt;org.jdom2.Element&gt; </td></tr>
<tr><td align="left" balign="left"> + getChildren(arg0 : java.lang.String) : java.util.List&lt;org.jdom2.Element&gt; </td></tr>
<tr><td align="left" balign="left"> + getChildren(arg0 : java.lang.String, arg1 : org.jdom2.Namespace) : java.util.List&lt;org.jdom2.Element&gt; </td></tr>
<tr><td align="left" balign="left"> + getChild(arg0 : java.lang.String, arg1 : org.jdom2.Namespace) : org.jdom2.Element </td></tr>
<tr><td align="left" balign="left"> + getChild(arg0 : java.lang.String) : org.jdom2.Element </td></tr>
<tr><td align="left" balign="left"> + removeChild(arg0 : java.lang.String) : boolean </td></tr>
<tr><td align="left" balign="left"> + removeChild(arg0 : java.lang.String, arg1 : org.jdom2.Namespace) : boolean </td></tr>
<tr><td align="left" balign="left"> + removeChildren(arg0 : java.lang.String) : boolean </td></tr>
<tr><td align="left" balign="left"> + removeChildren(arg0 : java.lang.String, arg1 : org.jdom2.Namespace) : boolean </td></tr>
<tr><td align="left" balign="left"> + getNamespacesInScope() : java.util.List&lt;org.jdom2.Namespace&gt; </td></tr>
<tr><td align="left" balign="left"> + getNamespacesInherited() : java.util.List&lt;org.jdom2.Namespace&gt; </td></tr>
<tr><td align="left" balign="left"> + getNamespacesIntroduced() : java.util.List&lt;org.jdom2.Namespace&gt; </td></tr>
<tr><td align="left" balign="left"> + detach() : org.jdom2.Element </td></tr>
<tr><td align="left" balign="left"> + canContainContent(arg0 : org.jdom2.Content, arg1 : int, arg2 : boolean) </td></tr>
<tr><td align="left" balign="left"> + sortContent(arg0 : java.util.Comparator&lt;?&gt;) </td></tr>
<tr><td align="left" balign="left"> + sortChildren(arg0 : java.util.Comparator&lt;?&gt;) </td></tr>
<tr><td align="left" balign="left"> + sortAttributes(arg0 : java.util.Comparator&lt;?&gt;) </td></tr>
<tr><td align="left" balign="left"> + sortContent(arg0 : org.jdom2.filter.Filter&lt;E&gt;, arg1 : java.util.Comparator&lt;?&gt;) </td></tr>
<tr><td align="left" balign="left"> - resolve(arg0 : java.lang.String, arg1 : java.net.URI) : java.net.URI </td></tr>
<tr><td align="left" balign="left"> + getXMLBaseURI() : java.net.URI </td></tr>
<tr><td align="left" balign="left"> - writeObject(arg0 : java.io.ObjectOutputStream) </td></tr>
<tr><td align="left" balign="left"> - readObject(arg0 : java.io.ObjectInputStream) </td></tr>
		</table></td></tr>
		</table>>, URL="http://java.sun.com/j2se/1.4.2/docs/api/org/jdom2/Element.html", fontname="Trebuchet MS", fontcolor="black", fontsize=9.0];
}

