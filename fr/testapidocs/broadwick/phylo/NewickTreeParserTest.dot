#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Trebuchet MS",fontsize=10,labelfontname="Trebuchet MS",labelfontsize=10];
	node [fontname="Trebuchet MS",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// broadwick.phylo.NewickTreeParserTest
	c1385 [label=<<table title="broadwick.phylo.NewickTreeParserTest" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./NewickTreeParserTest.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Trebuchet MS"> NewickTreeParserTest </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + classWatchman : TestRule </td></tr>
<tr><td align="left" balign="left"> + watchman : TestRule </td></tr>
<tr><td align="left" balign="left"> - testFileName : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + NewickTreeParserTest() </td></tr>
<tr><td align="left" balign="left"> + setUpClass() </td></tr>
<tr><td align="left" balign="left"> + tearDownClass() </td></tr>
<tr><td align="left" balign="left"> + setUp() </td></tr>
<tr><td align="left" balign="left"> + tearDown() </td></tr>
<tr><td align="left" balign="left"> + testParse() </td></tr>
<tr><td align="left" balign="left"> + testParseWithArg() </td></tr>
<tr><td align="left" balign="left"> - checkTree(tree : Tree&lt;PhyloNode, Edge&lt;PhyloNode&gt;&gt;) </td></tr>
<tr><td align="left" balign="left"> - checkTreeWithBranchName(tree : Tree&lt;PhyloNode, Edge&lt;PhyloNode&gt;&gt;) </td></tr>
<tr><td align="left" balign="left"> - checkTreeWithOnlyRootNode(tree : Tree&lt;PhyloNode, Edge&lt;PhyloNode&gt;&gt;) </td></tr>
<tr><td align="left" balign="left"> - checkTreeWithNoBranchLengths(tree : Tree&lt;PhyloNode, Edge&lt;PhyloNode&gt;&gt;) </td></tr>
<tr><td align="left" balign="left"> - checkTreeWithWithBranchNamesWithoutBranchLengths(tree : Tree&lt;PhyloNode, Edge&lt;PhyloNode&gt;&gt;) </td></tr>
<tr><td align="left" balign="left"> - checkTreeWithNestedBranches(tree : Tree&lt;PhyloNode, Edge&lt;PhyloNode&gt;&gt;) </td></tr>
		</table></td></tr>
		</table>>, URL="./NewickTreeParserTest.html", fontname="Trebuchet MS", fontcolor="black", fontsize=9.0];
	// broadwick.phylo.NewickTreeParserTest NAVASSOC org.junit.rules.TestRule
	c1385:p -> c1401:p [taillabel="", label="", headlabel="", fontname="Trebuchet MS", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// broadwick.phylo.NewickTreeParserTest DEPEND broadwick.graph.Tree<V extends broadwick.graph.Vertex, E extends broadwick.graph.Edge<V>>
	c1385:p -> c1402:p [taillabel="", label="", headlabel="", fontname="Trebuchet MS", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// broadwick.phylo.NewickTreeParserTest DEPEND broadwick.graph.Tree<V extends broadwick.graph.Vertex, E extends broadwick.graph.Edge<V>>
	c1385:p -> c1402:p [taillabel="", label="", headlabel="", fontname="Trebuchet MS", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// broadwick.phylo.NewickTreeParserTest DEPEND broadwick.graph.Tree<V extends broadwick.graph.Vertex, E extends broadwick.graph.Edge<V>>
	c1385:p -> c1402:p [taillabel="", label="", headlabel="", fontname="Trebuchet MS", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// broadwick.phylo.NewickTreeParserTest DEPEND broadwick.graph.Tree<V extends broadwick.graph.Vertex, E extends broadwick.graph.Edge<V>>
	c1385:p -> c1402:p [taillabel="", label="", headlabel="", fontname="Trebuchet MS", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// broadwick.phylo.NewickTreeParserTest DEPEND broadwick.graph.Tree<V extends broadwick.graph.Vertex, E extends broadwick.graph.Edge<V>>
	c1385:p -> c1402:p [taillabel="", label="", headlabel="", fontname="Trebuchet MS", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// broadwick.phylo.NewickTreeParserTest DEPEND broadwick.graph.Tree<V extends broadwick.graph.Vertex, E extends broadwick.graph.Edge<V>>
	c1385:p -> c1402:p [taillabel="", label="", headlabel="", fontname="Trebuchet MS", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// org.junit.rules.TestRule
	c1401 [label=<<table title="org.junit.rules.TestRule" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/org/junit/rules/TestRule.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"><font face="Trebuchet MS"> TestRule </font></td></tr>
<tr><td align="center" balign="center"><font face="Trebuchet MS" point-size="7.0"> org.junit.rules </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Trebuchet MS" point-size="9.0"> + apply(arg0 : org.junit.runners.model.Statement, arg1 : org.junit.runner.Description) : org.junit.runners.model.Statement </font></td></tr>
		</table></td></tr>
		</table>>, URL="http://java.sun.com/j2se/1.4.2/docs/api/org/junit/rules/TestRule.html", fontname="Trebuchet MS", fontcolor="black", fontsize=9.0];
	// broadwick.graph.Tree<V extends broadwick.graph.Vertex, E extends broadwick.graph.Edge<V>>
	c1402 [label=<<table title="broadwick.graph.Tree" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/broadwick/graph/Tree.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Trebuchet MS"> Tree&lt;V extends broadwick.graph.Vertex, E extends broadwick.graph.Edge&lt;V&gt;&gt; </font></td></tr>
<tr><td align="center" balign="center"><font face="Trebuchet MS" point-size="7.0"> broadwick.graph </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - log : org.slf4j.Logger </td></tr>
<tr><td align="left" balign="left"> - vertexAttributes : java.util.Collection&lt;broadwick.graph.VertexAttribute&gt; </td></tr>
<tr><td align="left" balign="left"> - edgeAttributes : java.util.Collection&lt;broadwick.graph.EdgeAttribute&gt; </td></tr>
<tr><td align="left" balign="left"> - tree : edu.uci.ics.jung.graph.DelegateTree&lt;V, E&gt; </td></tr>
<tr><td align="left" balign="left"> - vertexmaps : java.util.HashMap&lt;java.lang.String, V&gt; </td></tr>
<tr><td align="left" balign="left"> - edgemaps : java.util.HashMap&lt;java.lang.String, E&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Tree() </td></tr>
<tr><td align="left" balign="left"> + getRoot() : V </td></tr>
<tr><td align="left" balign="left"> + getHeight() : int </td></tr>
<tr><td align="left" balign="left"> + getDepth(arg0 : V) : int </td></tr>
<tr><td align="left" balign="left"> + addVertex(arg0 : V) : boolean </td></tr>
<tr><td align="left" balign="left"> + getSubTree(arg0 : V) : broadwick.graph.Tree&lt;V, E&gt; </td></tr>
<tr><td align="left" balign="left"> + getInEdges(arg0 : V) : java.util.Collection&lt;E&gt; </td></tr>
<tr><td align="left" balign="left"> + getOutEdges(arg0 : V) : java.util.Collection&lt;E&gt; </td></tr>
<tr><td align="left" balign="left"> + getPredecessors(arg0 : V) : java.util.Collection&lt;V&gt; </td></tr>
<tr><td align="left" balign="left"> + getSuccessors(arg0 : V) : java.util.Collection&lt;V&gt; </td></tr>
<tr><td align="left" balign="left"> + inDegree(arg0 : V) : int </td></tr>
<tr><td align="left" balign="left"> + outDegree(arg0 : V) : int </td></tr>
<tr><td align="left" balign="left"> + isPredecessor(arg0 : V, arg1 : V) : boolean </td></tr>
<tr><td align="left" balign="left"> + isSuccessor(arg0 : V, arg1 : V) : boolean </td></tr>
<tr><td align="left" balign="left"> + getPredecessorCount(arg0 : V) : int </td></tr>
<tr><td align="left" balign="left"> + getSuccessorCount(arg0 : V) : int </td></tr>
<tr><td align="left" balign="left"> + getSource(arg0 : E) : V </td></tr>
<tr><td align="left" balign="left"> + getDest(arg0 : E) : V </td></tr>
<tr><td align="left" balign="left"> + isSource(arg0 : V, arg1 : E) : boolean </td></tr>
<tr><td align="left" balign="left"> + isDest(arg0 : V, arg1 : E) : boolean </td></tr>
<tr><td align="left" balign="left"> + addEdge(arg0 : E, arg1 : V, arg2 : V) : boolean </td></tr>
<tr><td align="left" balign="left"> + addEdge(arg0 : E, arg1 : V, arg2 : V, arg3 : broadwick.graph.EdgeType) : boolean </td></tr>
<tr><td align="left" balign="left"> + getEndpoints(arg0 : E) : broadwick.utils.Pair&lt;V, V&gt; </td></tr>
<tr><td align="left" balign="left"> + getOpposite(arg0 : V, arg1 : E) : V </td></tr>
<tr><td align="left" balign="left"> + getVertexCount() : int </td></tr>
<tr><td align="left" balign="left"> + getVertex(arg0 : java.lang.String) : V </td></tr>
<tr><td align="left" balign="left"> + getVertices() : java.util.Collection&lt;V&gt; </td></tr>
<tr><td align="left" balign="left"> + getEdge(arg0 : java.lang.String) : E </td></tr>
<tr><td align="left" balign="left"> + getEdges() : java.util.Collection&lt;E&gt; </td></tr>
<tr><td align="left" balign="left"> + getPredecessor(arg0 : V) : V </td></tr>
<tr><td align="left" balign="left"> + removeVertex(arg0 : V) : boolean </td></tr>
<tr><td align="left" balign="left"> + removeEdge(arg0 : E) : boolean </td></tr>
<tr><td align="left" balign="left"> + addSubtree(arg0 : broadwick.graph.Tree&lt;V, E&gt;, arg1 : V, arg2 : E) </td></tr>
<tr><td align="left" balign="left"> + getEdgeType() : broadwick.graph.EdgeType </td></tr>
<tr><td align="left" balign="left"> + addVertexAttribute(arg0 : java.lang.String, arg1 : java.lang.Class&lt;&gt;, arg2 : java.lang.String) </td></tr>
<tr><td align="left" balign="left"> + addEdgeAttribute(arg0 : java.lang.String, arg1 : java.lang.Class&lt;&gt;, arg2 : java.lang.String) </td></tr>
<tr><td align="left" balign="left"> # finalize() </td></tr>
<tr><td align="left" balign="left"> + getVertexAttributes() : java.util.Collection&lt;broadwick.graph.VertexAttribute&gt; </td></tr>
<tr><td align="left" balign="left"> + getEdgeAttributes() : java.util.Collection&lt;broadwick.graph.EdgeAttribute&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="http://java.sun.com/j2se/1.4.2/docs/api/broadwick/graph/Tree.html", fontname="Trebuchet MS", fontcolor="black", fontsize=9.0];
}

