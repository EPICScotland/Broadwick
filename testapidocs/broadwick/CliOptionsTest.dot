#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Trebuchet MS",fontsize=10,labelfontname="Trebuchet MS",labelfontsize=10];
	node [fontname="Trebuchet MS",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// broadwick.CliOptionsTest
	c1069 [label=<<table title="broadwick.CliOptionsTest" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./CliOptionsTest.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Trebuchet MS"> CliOptionsTest </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - configFile : String </td></tr>
<tr><td align="left" balign="left"> - configFileOpts : String[] </td></tr>
<tr><td align="left" balign="left"> + classWatchman : TestRule </td></tr>
<tr><td align="left" balign="left"> + watchman : TestRule </td></tr>
<tr><td align="left" balign="left"> + exception : ExpectedException </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CliOptionsTest() </td></tr>
<tr><td align="left" balign="left"> + setUpClass() </td></tr>
<tr><td align="left" balign="left"> + tearDownClass() </td></tr>
<tr><td align="left" balign="left"> + setUp() </td></tr>
<tr><td align="left" balign="left"> + tearDown() </td></tr>
<tr><td align="left" balign="left"> + testValidCommandLineArguments() </td></tr>
<tr><td align="left" balign="left"> + testGetConfigurationFileName() </td></tr>
		</table></td></tr>
		</table>>, URL="./CliOptionsTest.html", fontname="Trebuchet MS", fontcolor="black", fontsize=9.0];
	// broadwick.CliOptionsTest NAVASSOC org.junit.rules.TestRule
	c1069:p -> c1100:p [taillabel="", label="", headlabel="", fontname="Trebuchet MS", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// broadwick.CliOptionsTest NAVASSOC org.junit.rules.ExpectedException
	c1069:p -> c1105:p [taillabel="", label="", headlabel="", fontname="Trebuchet MS", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// org.junit.rules.TestRule
	c1100 [label=<<table title="org.junit.rules.TestRule" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/org/junit/rules/TestRule.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"><font face="Trebuchet MS"> TestRule </font></td></tr>
<tr><td align="center" balign="center"><font face="Trebuchet MS" point-size="7.0"> org.junit.rules </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + apply(arg0 : org.junit.runners.model.Statement, arg1 : org.junit.runner.Description) : org.junit.runners.model.Statement </td></tr>
		</table></td></tr>
		</table>>, URL="http://java.sun.com/j2se/1.4.2/docs/api/org/junit/rules/TestRule.html", fontname="Trebuchet MS", fontcolor="black", fontsize=9.0];
	// org.junit.rules.ExpectedException
	c1105 [label=<<table title="org.junit.rules.ExpectedException" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/org/junit/rules/ExpectedException.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Trebuchet MS"> ExpectedException </font></td></tr>
<tr><td align="center" balign="center"><font face="Trebuchet MS" point-size="7.0"> org.junit.rules </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - fMatcherBuilder : org.junit.rules.ExpectedExceptionMatcherBuilder </td></tr>
<tr><td align="left" balign="left"> - handleAssumptionViolatedExceptions : boolean </td></tr>
<tr><td align="left" balign="left"> - handleAssertionErrors : boolean </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - ExpectedException() </td></tr>
<tr><td align="left" balign="left"> + none() : org.junit.rules.ExpectedException </td></tr>
<tr><td align="left" balign="left"> + handleAssertionErrors() : org.junit.rules.ExpectedException </td></tr>
<tr><td align="left" balign="left"> + handleAssumptionViolatedExceptions() : org.junit.rules.ExpectedException </td></tr>
<tr><td align="left" balign="left"> + apply(arg0 : org.junit.runners.model.Statement, arg1 : org.junit.runner.Description) : org.junit.runners.model.Statement </td></tr>
<tr><td align="left" balign="left"> + expect(arg0 : org.hamcrest.Matcher&lt;?&gt;) </td></tr>
<tr><td align="left" balign="left"> + expect(arg0 : java.lang.Class&lt;?&gt;) </td></tr>
<tr><td align="left" balign="left"> + expectMessage(arg0 : java.lang.String) </td></tr>
<tr><td align="left" balign="left"> + expectMessage(arg0 : org.hamcrest.Matcher&lt;java.lang.String&gt;) </td></tr>
<tr><td align="left" balign="left"> + expectCause(arg0 : org.hamcrest.Matcher&lt;?&gt;) </td></tr>
<tr><td align="left" balign="left"> - failDueToMissingException() </td></tr>
<tr><td align="left" balign="left"> - optionallyHandleException(arg0 : java.lang.Throwable, arg1 : boolean) </td></tr>
<tr><td align="left" balign="left"> - handleException(arg0 : java.lang.Throwable) </td></tr>
		</table></td></tr>
		</table>>, URL="http://java.sun.com/j2se/1.4.2/docs/api/org/junit/rules/ExpectedException.html", fontname="Trebuchet MS", fontcolor="black", fontsize=9.0];
}

