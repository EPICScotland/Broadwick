#![Stochastic Solver]
main:Main[a]
/kernel:TransitionKernel[a]
/manager:AmountManager[a]
/process:StochasticProcess[a]
/controller:Controller[a]
/observer:Observer[a]
/theta:ThetaEvent[a]

main:kernel.new()
main:manager.new()
main:observer.new()
main:controller.new()
main:theta.new()

main:process.new(kernel, manager)
[c:loop observers]
main:process.addObserver(observer)
[/c]
main:process.setController(controller)
[c:loop theta events]
main:process.addThetaEvent(theta)
[/c]

process:start
[c:alt init()]
process:set current time
[/c]
[c:loop observers]
process:observer.started()
[/c]
[c:loop while controller.goOn()]
[c:alt performStep()]
process:Pick time and event(s)
[c:loop observers]
process:observer.fireEvent(event, time)
observer:manager.updateStates*()
observer:kernel.updateKernel*()
[/c]
[c:alt if theta event in step]
process:theta.getEventevent()
[c:loop observers]
process:observer.fireThetaEvent()
observer:manager.updateStates*()
observer:kernel.updateKernel*()
[/c]
[/c]
[/c]
[c:loop observers]
process:observer.step()
observer:kernel.updateKernel*()
[/c]
[/c]
[c:loop observers]
process:observer.finished()
[/c]
